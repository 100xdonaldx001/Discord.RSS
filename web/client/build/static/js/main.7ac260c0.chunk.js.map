{"version":3,"sources":["serviceWorker.js","js/constants/action-types.js","js/reducers/index-reducer.js","js/store/index-store.js","js/actions/index-actions.js","js/index.js","js/constants/colors.js","js/constants/pages.js","js/components/utils/DiscordAvatar.js","js/components/LeftMenu/MenuButton.js","js/components/LeftMenu/index.js","js/components/utils/Modal.js","js/components/ContentBody/Dashboard/FeedTable/ViewFeedModal.js","js/components/ContentBody/Dashboard/FeedTable/AddFeedModal.js","js/components/ContentBody/Dashboard/FeedTable/index.js","js/components/ContentBody/Dashboard/index.js","js/components/ContentBody/Filters/index.js","js/components/ContentBody/Subscriptions/index.js","js/components/ContentBody/FAQ/index.js","js/components/ContentBody/Support/index.js","js/components/ContentBody/MiscOptions/index.js","js/components/ContentBody/index.js","App.js","index.js"],"names":["Boolean","window","location","hostname","match","UPDATE_GUILD","TEST_ACTION","CHANGE_PAGE","CHANGE_FEED","ADD_FEED","REMOVE_FEED","SET_GUILD_CHANNELS","SET_GUILD_AUTHORIZATION","SET_ACTIVE_GUILD","initialState","testVal","activeGuild","activeFeed","feeds","guilds","channels","rootReducer","state","arguments","length","undefined","action","guildId","type","update","$set","payload","guildRss","page","guildFeeds","guildFeedsClone","Object","toConsumableArray","i","feed","rssName","feedClone","objectSpread","key","data","defineProperty","objectQuery","user","name","authorized","Array","isArray","$push","feedArr","splice","createStore","changePage","addFeed","removeFeed","store","testAction","colors","blurple","greyple","darkButNotBlack","white","red","green","notQuiteblack","text","pages","DASHBOARD","FILTERS","SUBSCRIPTIONS","MISC_OPTIONS","FAQ","SUPPORT","styled","div","_templateObject","lighten","_templateObject2","ServerBlockAvatar","_templateObject3","props","concat","src","width","DiscordAvatar","react_default","a","createElement","Button","MenuButton_templateObject","disabled","darken","active","MenuButton","Popup","content","inverted","position","trigger","children","LeftMenuDiv","LeftMenu_templateObject","Logo","img","LeftMenu_templateObject2","Title","h2","LeftMenu_templateObject3","MenuSectionHeader","h3","_templateObject4","h4","_templateObject5","BrandTitleContainer","_templateObject6","UserCard","_templateObject7","transparentize","UserCardTextContainer","_templateObject8","MyDropdown","Dropdown","_templateObject9","RouterLink","Link","_templateObject10","LeftMenu","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","_this2","_this$props","selectedFeed","dropdownOptions","map","title","value","userAvatar","id","avatar","to","onClick","utils_DiscordAvatar","username","Divider","LeftMenu_MenuButton","options","selection","Component","withRouter","connect","dispatch","FixedWidthModal","Modal","Modal_templateObject","ModalHeader","Modal_templateObject2","ModalFooter","Modal_templateObject3","ModalBody","Modal_templateObject4","hasHeader","hasFooter","DiscordModal","open","TransitionablePortal","duration","onOpen","setTimeout","document","body","classList","add","transition","animation","style","onClose","event","remove","closeOnEscape","Content","overflow","header","footer","LINK_VALIDATION","PENDING","VALIDATING","VALID","INVALID","ViewFeedModal_templateObject","FeedButtonsContainer","ViewFeedModal_templateObject2","ViewFeedContainer","ViewFeedModal_templateObject3","ViewFeedContainerWithEdit","ViewFeedModal_templateObject4","ChannelDropdown","ViewFeedModal_templateObject5","ViewFeedModal","close","justRemoved","setState","validatingFeedback","validatingState","channel","editingChannel","editingTitle","confirm","toSend","keys","axios","patch","then","changeFeed","catch","err","console","log","response","errMessage","message","saveNewTitle","delete","Alert","error","link","effect","timeout","_this$props2","cancelCondition","guildChannels","channelId","push","utils_Modal","ViewFeedModal_ModalHeader","Button_Button","color","search","fluid","onChange","e","channelName","Input","placeholder","target","Transition","visible","AddFeedModal_templateObject","AddFeedModal_templateObject2","AddFeedModalContent","AddFeedModal_templateObject3","AddFeedModal_templateObject4","AddFeedModal","closeAddFeed","justAddedLink","newState","addFeedLink","invalidAttempted","_this$state","addFeedChannel","addFeedTitle","post","_ref","_rssName","AddFeedModal_ModalHeader","AddFeedModal_FeedButtonsContainer","AddFeedModal_ChannelDropdown","SectionHeader","FeedTable_templateObject","FeedRow","Table","Row","FeedTable_templateObject2","TableTop","FeedTable_templateObject3","FeedTable","openAddFeed","addFeedDisabled","unauthorized","viewFeed","addFeedOpen","modal","tableRows","Cell","status","hoverable","FeedTable_ViewFeedModal","FeedTable_AddFeedModal","celled","selectable","Header","HeaderCell","Body","ServerBackground","Dashboard_templateObject","ServerBlock","Dashboard_templateObject2","ServerBlockTextContainer","Dashboard_templateObject3","ServerBlockTitle","h1","Dashboard_templateObject4","ServerBlockText","p","Dashboard_templateObject5","GuildContentWrapper","Dashboard_templateObject6","SettingBox","Dashboard_templateObject7","Dashboard","Dashboard_templateObject8","prevProps","get","guildStateChanels","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","return","setGuildChannels","setGuildAuthorization","ref","icon","guildName","Dashboard_ServerBackground","Dashboard_ServerBlock","Dashboard_FeedTable","Filters","setToThisPage","Subscriptions","Support","MiscOptions","ContentBody_templateObject","TitleContainer","ContentBody_templateObject2","ServerDropdown","ContentBody_templateObject3","ContentBody","setActiveGuild","Switch","Route","exact","path","component","MainContainer","App_templateObject","App","serverResponse","socketStatus","socketError","loaded","socket","WebSocket","onopen","onerror","onmessage","onclose","Promise","all","_ref2","slicedToArray","userResp","guildList","filters","subscriptions","guildData","profile","guildDiscord","discord","owner","permissions","sendAlertsTo","dateLanguage","dateFormat","prefix","timezone","rssList","sources","source","checkTitles","imgPreviews","imgLinksExistence","checkDates","formatTables","toggleRoleMentions","globalSubscriptions","filteredSubscriptions","initializeState","className","components_LeftMenu","components_ContentBody","react_s_alert_default","stack","limit","html","ReactDOM","render","es","BrowserRouter","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7ac260c0.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n)\r\n\r\nexport function register (config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config)\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          )\r\n        })\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n  }\r\n}\r\n\r\nfunction registerValidSW (swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing\r\n        if (installingWorker == null) {\r\n          return\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              )\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration)\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.')\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration)\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error)\r\n    })\r\n}\r\n\r\nfunction checkValidServiceWorker (swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type')\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload()\r\n          })\r\n        })\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config)\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      )\r\n    })\r\n}\r\n\r\nexport function unregister () {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister()\r\n    })\r\n  }\r\n}\r\n","export const UPDATE_GUILD = 'UPDATE_GUILD'\r\nexport const TEST_ACTION = 'TEST_ACTION'\r\nexport const CHANGE_PAGE = 'CHANGE_PAGE'\r\nexport const CHANGE_FEED = 'CHANGE_FEED'\r\nexport const ADD_FEED = 'ADD_FEED'\r\nexport const REMOVE_FEED = 'REMOVE_FEED'\r\nexport const SET_GUILD_CHANNELS = 'SET_GUILD_CHANNELS'\r\nexport const SET_GUILD_AUTHORIZATION = 'SET_GUILD_AUTHORIZATION'\r\nexport const SET_ACTIVE_GUILD = 'SET_ACTIVE_GUILD'\r\n","import { UPDATE_GUILD, TEST_ACTION, CHANGE_PAGE, CHANGE_FEED, ADD_FEED, REMOVE_FEED, SET_GUILD_CHANNELS, SET_GUILD_AUTHORIZATION, SET_ACTIVE_GUILD } from '../constants/action-types'\r\nimport update from 'immutability-helper'\r\n\r\nconst initialState = {\r\n  testVal: 'Initial State Value',\r\n  activeGuild: '',\r\n  activeFeed: '',\r\n  feeds: {},\r\n  guilds: {},\r\n  channels: {}\r\n}\r\n\r\n// Always use immutability-helper for updating nested objects like guildRss\r\n\r\nfunction rootReducer (state = initialState, action) {\r\n  const guildId = state.activeGuild\r\n\r\n  if (action.type === TEST_ACTION) {\r\n    return update(state, { testVal: { $set: action.payload } })\r\n\r\n  } else if (action.type === UPDATE_GUILD) {\r\n    return update(state, { guildRss: { $set: action.payload } })\r\n\r\n  } else if (action.type === CHANGE_PAGE) {\r\n    return update(state, { page: { $set: action.page } })\r\n    \r\n  } else if (action.type === CHANGE_FEED) {\r\n    const guildFeeds = state.feeds[state.activeGuild]\r\n    if (!guildFeeds) return state\r\n    const guildFeedsClone = [ ...guildFeeds ]\r\n    for (let i = 0; i < guildFeedsClone.length; ++i) {\r\n      const feed = guildFeedsClone[i]\r\n      if (feed.rssName !== action.rssName) continue\r\n      const feedClone = { ...feed }\r\n      for (const key in action.data) feedClone[key] = action.data[key]\r\n      guildFeedsClone[i] = feedClone\r\n      return update(state, { feeds: { [guildId]: { $set: guildFeedsClone } } })\r\n    }\r\n\r\n  } else if (action.type === 'INIT_STATE') {\r\n    const data = action.data\r\n    const objectQuery = { user: { $set: data.user } }\r\n    for (const name in data) {\r\n      objectQuery[name] = { $set: data[name] }\r\n    }\r\n    return update(state, objectQuery)\r\n\r\n  } else if (action.type === SET_GUILD_CHANNELS) {\r\n    return update(state, { channels: { [guildId]: { $set: action.channels } } })\r\n\r\n  } else if (action.type === SET_GUILD_AUTHORIZATION) {\r\n    return update(state, { guilds: { [guildId]: { authorized: { $set: action.authorized } } } })\r\n\r\n  } else if (action.type === SET_ACTIVE_GUILD) {\r\n    return update(state, { activeGuild: { $set: action.guildId } })\r\n\r\n  } else if (action.type === ADD_FEED) {\r\n    const { feed } = action\r\n    if (!Array.isArray(state.feeds[guildId])) return update(state, { feeds: { [guildId]: { $set: [ feed ] } } })\r\n    else return update(state, { feeds: { [guildId]: { $push: [ feed ] } } })\r\n\r\n  } else if (action.type === REMOVE_FEED) {\r\n    const { rssName } = action\r\n    const feedArr = [ ...state.feeds[guildId] ]\r\n    if (!feedArr) return state\r\n    for (let i = feedArr.length - 1; i >= 0; --i) {\r\n      if (feedArr[i].rssName !== rssName) continue\r\n      feedArr.splice(i, 1)\r\n      return update(state, { feeds: { [guildId]: { $set: feedArr } } })\r\n    }\r\n  }\r\n  return state\r\n}\r\n\r\nexport default rootReducer\r\n","import { createStore } from 'redux'\r\nimport rootReducer from '../reducers/index-reducer.js'\r\n\r\nexport default createStore(rootReducer)\r\n","import { TEST_ACTION, CHANGE_PAGE, CHANGE_FEED, ADD_FEED, REMOVE_FEED, SET_GUILD_CHANNELS, SET_GUILD_AUTHORIZATION, SET_ACTIVE_GUILD } from '../constants/action-types.js'\r\n\r\nexport function testAction (payload) {\r\n  return { type: TEST_ACTION, payload }\r\n}\r\n\r\nexport function changePage (page) {\r\n  return { type: CHANGE_PAGE, page }\r\n}\r\n\r\nexport function changeFeed (rssName, data) {\r\n  return { type: CHANGE_FEED, rssName, data }\r\n}\r\n\r\nexport function addFeed (feed) {\r\n  return { type: ADD_FEED, feed }\r\n}\r\n\r\nexport function removeFeed (rssName) {\r\n  return { type: REMOVE_FEED, rssName }\r\n}\r\n\r\nexport function setGuildChannels (channels) {\r\n  return { type: SET_GUILD_CHANNELS, channels }\r\n}\r\n\r\nexport function setGuildAuthorization (authorized) {\r\n  return { type: SET_GUILD_AUTHORIZATION, authorized }\r\n}\r\n\r\nexport function setActiveGuild (guildId) {\r\n  return { type: SET_ACTIVE_GUILD, guildId }\r\n}","// Purely for testing redux\r\n\r\nimport store from './store/index-store.js'\r\nimport { testAction } from './actions/index-actions.js'\r\n\r\nwindow.store = store\r\nwindow.testAction = testAction\r\n","export default {\r\n  discord: {\r\n    blurple: `#7289DA`,\r\n    greyple: `#99AAB5`,\r\n    darkButNotBlack: `#2C2F33`,\r\n    white: '#f6f6f7',\r\n    red: '#f04747',\r\n    green: '#43b581',\r\n    notQuiteblack: `#23272A`,\r\n    text: '#b9bbbe'\r\n  }\r\n}","export default {\r\n  DASHBOARD: 0,\r\n  FILTERS: 1,\r\n  SUBSCRIPTIONS: 2,\r\n  MISC_OPTIONS: 3,\r\n  FAQ: 4,\r\n  SUPPORT: 5\r\n}","import React, { Component } from 'react'\r\nimport colors from '../../constants/colors'\r\nimport styled from 'styled-components'\r\nimport { lighten } from 'polished'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst ServerBackground = styled.div`\r\n  position: relative;\r\n  background-color:  ${lighten(0.02, colors.discord.notQuiteblack)};\r\n  /* background: linear-gradient(0deg, pink 50%, cyan 50%); */\r\n  width: 100%;\r\n  height: 25.5em;\r\n  /* z-index: 10; */\r\n`\r\n\r\nconst ServerBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: absolute;\r\n  bottom: -7em;\r\n  left: 7em;\r\n  /* background: green; */\r\n  height: 14em;\r\n`\r\n\r\nconst ServerBlockAvatar = styled.div`\r\n  border-radius: 50%;\r\n  background-image: ${props => `url('${props.src}')`};\r\n  width: ${props => props.width};\r\n  height: ${props => props.width};\r\n  background-size: cover;\r\n  background-position: top center;\r\n  z-index: 1;\r\n  background-blend-mode: screen;\r\n  background-color: ${colors.discord.darkButNotBlack};\r\n`\r\n\r\nfunction DiscordAvatar (props) {\r\n  return (\r\n    <ServerBlockAvatar src={props.src} width={props.width} />\r\n  )\r\n}\r\n\r\nDiscordAvatar.propTypes = {\r\n  src: PropTypes.string,\r\n  width: PropTypes.string\r\n}\r\n\r\nexport default DiscordAvatar\r\n","import React, { Component } from 'react'\r\nimport colors from '../../constants/colors'\r\nimport { Popup } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken, transparentize } from 'polished'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Button = styled.div`\r\n  text-align: left;\r\n  padding: 1.25em;\r\n  margin: .5em 1em;\r\n  border-radius: .25em;\r\n  color: ${props => props.disabled ? darken(0.4, colors.discord.text) : props.active ? 'white' : lighten(0.45, colors.discord.darkButNotBlack)};\r\n  background-color: ${props => props.disabled ? 'transparent' : props.active ? colors.discord.blurple : 'transparent'};\r\n  /* width: 100%; */\r\n  user-select: none;\r\n  cursor: ${props => props.disabled ? 'not-allowed' : 'pointer'} !important;\r\n  &:hover {\r\n    user-select: none;\r\n    text-decoration: none;\r\n    /* color: white; */\r\n    color: ${props => props.disabled ? darken(0.4, colors.discord.text) : props.active ? 'white' : lighten(0.65, colors.discord.darkButNotBlack)};\r\n    background-color: ${props => props.disabled ? 'transparent' : props.active ? colors.discord.blurple : 'rgba(255, 255, 255, .15)'};\r\n    cursor: pointer;\r\n  }\r\n  &:active {\r\n    background-color: ${props => props.disabled ? 'transparent' : 'rgba(255, 255, 255, .25)'};\r\n  }\r\n`\r\n\r\nfunction MenuButton (props) {\r\n  return !props.disabled\r\n    ? <Button {...props} >\r\n      {props.children}\r\n    </Button>\r\n    : <Popup content='You must select a feed first!' inverted position='right center' trigger={\r\n      <Button {...props} >\r\n        {props.children}\r\n      </Button>} />\r\n}\r\n\r\nMenuButton.propTypes = {\r\n  children: PropTypes.node,\r\n  disabled: PropTypes.bool\r\n}\r\n\r\nexport default MenuButton\r\n","import { Switch, Route, withRouter, Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport React, { Component } from 'react'\r\nimport colors from '../../constants/colors'\r\nimport pages from '../../constants/pages'\r\nimport { Divider, Dropdown } from 'semantic-ui-react'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken, transparentize } from 'polished'\r\nimport DiscordAvatar from '../utils/DiscordAvatar'\r\nimport MenuButton from './MenuButton'\r\nimport { changePage } from '../../actions/index-actions'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    selectedFeed: state.activeFeed,\r\n    page: state.page,\r\n    user: state.user,\r\n    feeds: state.feeds,\r\n    guildId: state.activeGuild\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changePage: page => dispatch(changePage(page))\r\n  }\r\n}\r\n\r\nconst LeftMenuDiv = styled.div`\r\n  display: flex;\r\n  flex-direction: column;\r\n  justify-content: space-between;\r\n  min-width: 22em;\r\n  height: 100vh;\r\n  background: ${darken(0.02, colors.discord.darkButNotBlack)};\r\n`\r\n\r\nconst Logo = styled.img`\r\n  height:  2em;\r\n  margin-right: 1.5em;\r\n`\r\n\r\nconst Title = styled.h2`\r\n  color: ${darken(0.1, 'white')};\r\n  margin: 0;\r\n  /* font-weight: 300; */\r\n`\r\n\r\nconst Status = styled.h3`\r\n  color: ${darken(0.25, 'white')};\r\n  font-weight: 300;\r\n  margin-bottom: 2em;\r\n`\r\n\r\nconst MenuSectionHeader = styled.h4`\r\n  /* margin-top: 0; */\r\n  padding-left: 1.5em;\r\n  text-align: left;\r\n  color: white;\r\n  font-weight: 300;\r\n`\r\n\r\nconst BrandTitleContainer = styled.div`\r\n  padding-left: 2em;\r\n  height: 5em;\r\n  box-shadow: 0 2px 0px 0 rgba(0,0,0,0.2);\r\n  display: flex;\r\n  /* justify-content: cen; */\r\n  align-items: center;\r\n  user-select: none;\r\n  /* cursor: pointer; */\r\n  &:hover {\r\n    text-decoration: none;\r\n  }\r\n`\r\n\r\nconst UserCard = styled.div`\r\n  color: ${darken(0.15, 'white')};\r\n  /* width: 100%; */\r\n  align-items: center;\r\n  background-color: ${darken(0.03, colors.discord.darkButNotBlack)};\r\n  border-style: solid;\r\n  border-width: 1px;\r\n  border-color: ${transparentize(0.5, darken(0.1, colors.discord.darkButNotBlack))};\r\n  display: flex;\r\n  /* justify-content: space-evenly; */\r\n  padding: .75em;\r\n  border-radius: 0.5em;\r\n  margin: 1.5em 1em;\r\n`\r\n\r\nconst UserCardTextContainer = styled.div`\r\n  display: flex;\r\n  height: 4em;\r\n  flex-direction: column;\r\n  justify-content: space-between\r\n  text-align: left;\r\n  margin-left: 1.5em;\r\n  & p:first-child {\r\n    font-weight: bold;\r\n  }\r\n`\r\n\r\nconst MyDropdown = styled(Dropdown)`\r\n  /* margin-left: 1em;\r\n  margin-right: 1em; */\r\n  width: 85%;\r\n  margin-bottom: 1em;\r\n  background-color: green;\r\n  &:hover {\r\n    cursor: not-allowed;\r\n  }\r\n`\r\n\r\nconst RouterLink = styled(Link)`\r\n  &:active, &:focus {\r\n    outline: 0;\r\n    border: none;\r\n  }\r\n`\r\n\r\nclass LeftMenu extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      page: pages.DASHBOARD\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { guildId, feeds, user, selectedFeed } = this.props\r\n    const dropdownOptions = !feeds[guildId] ? [] : feeds[guildId].map((feed, i) => {\r\n      return { text: `${i + 1} - ${feed.title}`, value: feed.rssName }\r\n    })\r\n\r\n    const userAvatar = user ? `https://cdn.discordapp.com/avatars/${user.id}/${user.avatar}.png` : undefined\r\n    return (\r\n      <LeftMenuDiv>\r\n        <div>\r\n          <RouterLink to='/' onClick={() => this.props.changePage(pages.DASHBOARD)}>\r\n            <BrandTitleContainer>\r\n              <Logo src='https://discordapp.com/assets/d36b33903dafb0107bb067b55bdd9cbc.svg' />\r\n              <Title>Discord.RSS</Title>\r\n            </BrandTitleContainer>\r\n          </RouterLink>\r\n          <UserCard>\r\n            <DiscordAvatar src={userAvatar} width='4em' />\r\n            <UserCardTextContainer>\r\n              <p>{user ? user.username : undefined}</p>\r\n              <p>ID {user ? user.id : undefined}</p>\r\n            </UserCardTextContainer>\r\n          </UserCard>\r\n          <Divider />\r\n          <RouterLink to='/' onClick={() => this.props.changePage(pages.DASHBOARD)}><MenuButton active={this.props.page === pages.DASHBOARD}>Dashboard</MenuButton></RouterLink>\r\n          <Divider />\r\n          <MenuSectionHeader>Selected Feed</MenuSectionHeader>\r\n          <MyDropdown options={dropdownOptions} selection value={selectedFeed} />\r\n          <Divider />\r\n          <MenuSectionHeader>Feed Customizations</MenuSectionHeader>\r\n          <RouterLink to='/filters' onClick={() => this.props.changePage(pages.FILTERS)}><MenuButton active={this.props.page === pages.FILTERS}>Filters</MenuButton></RouterLink>\r\n          <RouterLink to='/subscriptions' onClick={() => this.props.changePage(pages.SUBSCRIPTIONS)}><MenuButton active={this.props.page === pages.SUBSCRIPTIONS}>Subscriptions</MenuButton></RouterLink>\r\n          <RouterLink to='/miscoptions' onClick={() => this.props.changePage(pages.MISC_OPTIONS)}><MenuButton active={this.props.page === pages.MISC_OPTIONS}>Misc Options</MenuButton></RouterLink>\r\n          <Divider />\r\n          <MenuSectionHeader>Information</MenuSectionHeader>\r\n\r\n          <RouterLink to='/faq' onClick={() => this.props.changePage(pages.FAQ)}><MenuButton active={this.props.page === pages.FAQ}>FAQ</MenuButton></RouterLink>\r\n          <RouterLink to='/support' onClick={() => this.props.changePage(pages.SUPPORT)}><MenuButton disabled active={this.props.page === pages.SUPPORT}>Support</MenuButton></RouterLink>\r\n        </div>\r\n        <div>\r\n          <Divider />\r\n          <MenuButton>Feedback</MenuButton>\r\n        </div>\r\n      </LeftMenuDiv>\r\n    )\r\n  }\r\n}\r\n\r\nLeftMenu.propTypes = {\r\n  page: PropTypes.number,\r\n  changePage: PropTypes.func,\r\n  feeds: PropTypes.object,\r\n  user: PropTypes.object,\r\n  guildId: PropTypes.string\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(LeftMenu))\r\n","import React, { Component } from 'react'\r\nimport colors from '../../constants/colors'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken } from 'polished'\r\nimport { Table, Modal, Popup, Button, Header, TransitionablePortal, Transition } from 'semantic-ui-react'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst FixedWidthModal = styled(Modal)`\r\n  width: 490px;\r\n  color: ${colors.discord.text};\r\n`\r\n\r\nconst ModalHeader = styled.div`\r\n  position: fixed;\r\n  top: 0;\r\n  left: 0;\r\n  padding: 1em;\r\n  background-color: #36393f;\r\n  border-top-left-radius: 0.75em;\r\n  border-top-right-radius: 0.75em;\r\n  box-shadow: 0 2px 0px 0 rgba(0,0,0,0.2);\r\n  width: 100%;\r\n`\r\n\r\nconst ModalFooter = styled.div`\r\n  position: fixed;\r\n  bottom: 0;\r\n  left: 0;\r\n  padding: 1em;\r\n  background-color: ${colors.discord.darkButNotBlack};\r\n  border-bottom-left-radius: 0.75em;\r\n  border-bottom-right-radius: 0.75em;\r\n  width: 100%;\r\n`\r\n\r\nconst ModalBody = styled.div`\r\n  position: relative;\r\n  padding-top: ${props => props.hasHeader ? '5em' : 0};\r\n  padding-bottom: ${props => props.hasFooter ? '5em' : 0};\r\n`\r\n\r\nfunction DiscordModal (props) {\r\n  const { open } = props\r\n  return (\r\n    <TransitionablePortal\r\n      duration={200}\r\n      open={open}\r\n      onOpen={() => setTimeout(() => document.body.classList.add('modal-fade-in'), 0)}\r\n      transition={{ animation: 'scale', duration: 150 }}\r\n    >\r\n      <FixedWidthModal style={{ width: '490px' }} open onClose={(event) => {\r\n        document.body.classList.remove('modal-fade-in');\r\n        props.onClose()\r\n      }} closeOnEscape>\r\n        <Modal.Content style={{ overflow: 'hidden' }}>\r\n          {props.header ? <ModalHeader>{props.header}</ModalHeader> : undefined}\r\n          <ModalBody hasHeader={!!props.header} hasFooter={!!props.footer}>{props.children}</ModalBody>\r\n          {props.footer ? <ModalFooter>{props.footer}</ModalFooter> : undefined}\r\n        </Modal.Content>\r\n      </FixedWidthModal>\r\n\r\n    </TransitionablePortal>\r\n  )\r\n}\r\n\r\nDiscordModal.propTypes = {\r\n  children: PropTypes.node,\r\n  header: PropTypes.node,\r\n  footer: PropTypes.node,\r\n  open: PropTypes.bool,\r\n  onClose: PropTypes.func\r\n}\r\n\r\nexport default DiscordModal\r\n","import React, { Component } from 'react'\r\nimport colors from '../../../../constants/colors'\r\nimport styled from 'styled-components'\r\nimport { addFeed, removeFeed, changeFeed } from '../../../../actions/index-actions'\r\nimport { lighten, darken } from 'polished'\r\nimport { Table, Modal, Transition, Popup, Button, Header, TransitionablePortal, Input, Dropdown, Divider } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport DiscordModal from '../../../utils/Modal'\r\nimport { connect } from 'react-redux'\r\nimport Alert from 'react-s-alert'\r\n\r\nconst LINK_VALIDATION = {\r\n  PENDING: 0,\r\n  VALIDATING: 1,\r\n  VALID: 2,\r\n  INVALID: 3 \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    guildId: state.activeGuild,\r\n    channels: state.channels\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    changeFeed: (rssName, data) => dispatch(changeFeed(rssName, data)),\r\n    removeFeed: rssName => dispatch(removeFeed(rssName))\r\n  }\r\n}\r\n\r\nconst ModalHeader = styled.div`\r\n  color: ${colors.discord.text};\r\n  h4 {\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst FeedButtonsContainer = styled.div`\r\n  /* > div {\r\n    margin-bottom: 1em;\r\n  } */\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n`\r\n\r\nconst ViewFeedContainer = styled.div`\r\n  h5 {\r\n    color: ${colors.discord.text};\r\n    margin-bottom: 0.5em;\r\n  }\r\n`\r\n\r\nconst ViewFeedContainerWithEdit = styled.div`\r\n  > div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    > div {\r\n      flex-grow: 1;\r\n    }\r\n    button {\r\n        margin-left: 2em !important;\r\n    }\r\n    p {\r\n      margin: 0;\r\n      flex-grow: 1;\r\n    }\r\n  }\r\n`\r\n\r\nconst ChannelDropdown = styled(Dropdown)`\r\n  .menu {\r\n    height: 10em !important;\r\n  }\r\n`\r\n\r\nclass ViewFeedModal extends Component {\r\n  constructor (props) {\r\n    super()\r\n    this.state = {\r\n      validatingState: LINK_VALIDATION.PENDING,\r\n      validatingFeedback: undefined,\r\n      title: '',\r\n      channel: '',\r\n      editingChannel: false,\r\n      editingTitle: false\r\n    }\r\n  }\r\n\r\n  close = justRemoved => {\r\n    this.setState({ validatingFeedback: null, validatingState: justRemoved ? LINK_VALIDATION.VALID : this.state.validatingState, title: '', channel: '', editingChannel: false, editingTitle: false })\r\n    return this.props.onClose()\r\n  }\r\n\r\n  confirm = () => {\r\n    const { feed, guildId } = this.props\r\n    if ((this.state.title === feed.title && !this.state.channel) || (this.state.channel === feed.channel && !this.state.title) || (this.state.title === feed.title && this.state.channel === feed.channel) || (!this.state.title && !this.state.channel)) return this.close()\r\n    this.setState({ validatingState: LINK_VALIDATION.VALIDATING })\r\n    const toSend = {}\r\n    if (this.state.channel) toSend.channel = this.state.channel\r\n    if (this.state.title) toSend.title = this.state.title\r\n    if (Object.keys(toSend).length === 0) return this.close()\r\n    axios.patch(`/api/guilds/${guildId}/feeds/${feed.rssName}`, toSend).then(() => {\r\n      this.props.changeFeed(feed.rssName, toSend)\r\n      this.close(true)\r\n    }).catch(err => {\r\n      console.log(err)\r\n      console.log(err.response)\r\n      const errMessage = err.response && err.response.data && err.response.data.message ? err.response.data.message : err.response.data ? err.response.data : err.message\r\n      this.setState({ validatingState: LINK_VALIDATION.INVALID, validatingFeedback: errMessage })\r\n    })\r\n  }\r\n\r\n  saveNewTitle = () => {\r\n    const newTitle = this.state.title\r\n  }\r\n\r\n  removeFeed = () => {\r\n    const feed = this.props.feed\r\n    this.setState({ validatingState: LINK_VALIDATION.VALIDATING, validatingFeedback: null })\r\n    axios.delete(`/api/guilds/${this.props.guildId}/feeds/${feed.rssName}`).then(() => {\r\n      this.props.removeFeed(feed.rssName)\r\n      this.close(true)\r\n    }).catch(err => {\r\n      console.log(err.response)\r\n      const errMessage = err.response && err.response.data && err.response.data.message ? err.response.data.message : err.response.data ? err.response.data : err.message\r\n      this.setState({ validatingState: LINK_VALIDATION.INVALID, validatingFeedback: errMessage })\r\n      if (!this.props.open) Alert.error(`Failed to Remove Feed<br />${feed.link}<br /><br />${errMessage || 'No details available'}`, { effect: 'scale', position: 'bottom-right', timeout: 8000 })\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { feed, open, onClose, channels, guildId } = this.props\r\n    const validatingState = this.state.validatingState === LINK_VALIDATION.VALIDATING\r\n    const cancelCondition = (this.state.title === feed.title && !this.state.channel) || (this.state.channel === feed.channel && !this.state.title) || (this.state.title === feed.title && this.state.channel === feed.channel) || (!this.state.title && !this.state.channel)\r\n    const guildChannels = channels[guildId]\r\n    const dropdownOptions = []\r\n    if (guildChannels) {\r\n      for (const channelId in guildChannels) {\r\n        const channel = guildChannels[channelId]\r\n        dropdownOptions.push({ text: `#${channel.name}`, value: channelId })\r\n      }\r\n    }\r\n\r\n    return (\r\n      <DiscordModal \r\n      header={<ModalHeader><h4>{feed.title}</h4>{feed.link}</ModalHeader>} \r\n      footer={<FeedButtonsContainer><Button color='red' content='Delete' onClick={this.removeFeed} disabled={validatingState} /><Button disabled={validatingState} content={cancelCondition ? 'Close' : validatingState ? 'Saving...' : 'Save Changes'} onClick={this.confirm} /></FeedButtonsContainer>}\r\n      open={open} onClose={() => {\r\n        onClose()\r\n      }}>\r\n        <ViewFeedContainer>\r\n          <div>\r\n            <div>\r\n              <h5>Filters Used</h5>\r\n              <p>Yes</p>\r\n            </div>\r\n          </div>\r\n          <Divider />\r\n          <ViewFeedContainerWithEdit>\r\n            <h5>Channel</h5>\r\n            <div>\r\n              { this.state.editingChannel\r\n              ? <ChannelDropdown disabled={validatingState} search options={dropdownOptions} selection fluid onChange={(e, data) => this.setState({ channel: data.value })} />\r\n              : <p>{channels[guildId] && channels[guildId][feed.channel] ? `#${channels[guildId][feed.channel].name}` : feed.channelName ? `#${feed.channelName}` : feed.channel}</p>\r\n              }\r\n              <Button content={this.state.editingChannel ? 'Cancel' : 'Edit'} onClick={e => this.setState(this.state.editingChannel ? {editingChannel: false, channel: '' } : {editingChannel: true, channel: '' })}/>\r\n            </div>\r\n          </ViewFeedContainerWithEdit>\r\n          <Divider />\r\n          <ViewFeedContainerWithEdit>\r\n            <h5>Title</h5>\r\n            <div>\r\n              { this.state.editingTitle \r\n                ? <Input disabled={validatingState} placeholder={feed.title} fluid onChange={e => this.setState({ title: e.target.value })} />\r\n                : <p>{feed.title}</p>\r\n              }\r\n              <Button content={this.state.editingTitle ? 'Cancel' : 'Edit'} onClick={e => this.setState(this.state.editingTitle ? { editingTitle: false, title: '' } : { editingTitle: true, title: '' })}/>\r\n            </div>\r\n          </ViewFeedContainerWithEdit>\r\n          <Divider />\r\n          <Transition visible={!!this.state.validatingFeedback} animation='drop' duration={300}>\r\n              <p style={{ color: colors.discord.red }}>{this.state.validatingFeedback}</p>\r\n          </Transition>\r\n        </ViewFeedContainer>\r\n      </DiscordModal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ViewFeedModal)\r\n","import React, { Component } from 'react'\r\nimport colors from '../../../../constants/colors'\r\nimport styled from 'styled-components'\r\nimport { addFeed, removeFeed } from '../../../../actions/index-actions'\r\nimport { lighten, darken } from 'polished'\r\nimport { Table, Modal, Transition, Popup, Button, Header, TransitionablePortal, Input, Dropdown, Divider } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport DiscordModal from '../../../utils/Modal'\r\nimport { connect } from 'react-redux'\r\nimport ViewFeedModal from './ViewFeedModal'\r\nimport Alert from 'react-s-alert'\r\n\r\nconst LINK_VALIDATION = {\r\n  PENDING: 0,\r\n  VALIDATING: 1,\r\n  VALID: 2,\r\n  INVALID: 3 \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    channels: state.channels,\r\n    guildId: state.activeGuild\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addFeed: feed => dispatch(addFeed(feed)),\r\n  }\r\n}\r\n\r\nconst ModalHeader = styled.div`\r\n  color: ${colors.discord.text};\r\n  h4 {\r\n    color: white;\r\n  }\r\n`\r\n\r\nconst FeedButtonsContainer = styled.div`\r\n  /* > div {\r\n    margin-bottom: 1em;\r\n  } */\r\n  display: flex;\r\n  justify-content: space-between;\r\n\r\n`\r\n\r\nconst AddFeedModalContent = styled.div`\r\n  > div {\r\n    display: flex;\r\n    flex-direction: row;\r\n    align-items: center;\r\n    justify-content: space-between;\r\n    > * {\r\n      flex-grow: 1;\r\n    }\r\n    button {\r\n      flex-grow: 0;\r\n      margin-left: 1em !important;\r\n    }\r\n  }\r\n  h5 {\r\n    margin-top: 0;\r\n    color: ${colors.discord.text};\r\n  }\r\n`\r\n\r\nconst ChannelDropdown = styled(Dropdown)`\r\n  .menu {\r\n    height: 10em !important;\r\n  }\r\n  /* height: 5em !important; */\r\n\r\n`\r\n\r\nclass AddFeedModal extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      validatingState: LINK_VALIDATION.PENDING,\r\n      addFeedLink: '',\r\n      addFeedChannel: '', // Both .value and .text should be available\r\n      addFeedTitle: '',\r\n      invalidAttempted: false,\r\n      validatingFeedback: undefined,\r\n    }\r\n  }\r\n\r\n  closeAddFeed = (justAddedLink) => {\r\n    const newState = { validatingFeedback: null, addFeedLink: justAddedLink ? '' : this.state.addFeedLink, invalidAttempted: false }\r\n    this.setState(newState)\r\n    this.props.onClose()\r\n  }\r\n\r\n  addFeed = () => {\r\n    const { addFeedLink, addFeedChannel, addFeedTitle } = this.state\r\n    const toSend = {\r\n      feed: addFeedLink,\r\n      channel: addFeedChannel,\r\n      title: addFeedTitle\r\n    }\r\n    this.setState({ validatingState: LINK_VALIDATION.VALIDATING, validatingFeedback: null })\r\n    axios.post(`/api/guilds/${this.props.guildId}/feeds`, toSend).then(({ data }) => {\r\n      this.props.addFeed({\r\n        rssName: data._rssName,\r\n        title: data.title,\r\n        channel: data.channel,\r\n        link: data.link\r\n      })\r\n      this.closeAddFeed(true)\r\n    }).catch(err => {\r\n      console.log(err.response)\r\n      const errMessage = err.response && err.response.data && err.response.data.message ? err.response.data.message : err.response.data ? err.response.data : err.message\r\n      this.setState({ validatingState: LINK_VALIDATION.INVALID, validatingFeedback: errMessage, invalidAttempted: true })\r\n      if (!this.props.open) Alert.error(`Failed to Remove Feed<br />${addFeedLink}<br /><br />${errMessage || 'No details available'}`, { effect: 'scale', position: 'bottom-right', timeout: 8000 })\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { guildId, channels, open } = this.props\r\n    const validatingState = this.state.validatingState === LINK_VALIDATION.VALIDATING\r\n    const guildChannels = channels[guildId]\r\n    const dropdownOptions = []\r\n    if (guildChannels) {\r\n      for (const channelId in guildChannels) {\r\n        const channel = guildChannels[channelId]\r\n        dropdownOptions.push({ text: `#${channel.name}`, value: channelId })\r\n      }\r\n    }\r\n\r\n    return (\r\n      <DiscordModal header={<ModalHeader><h4>New Feed</h4>Woah!</ModalHeader>} footer={\r\n          <FeedButtonsContainer>\r\n            <Button content='Cancel' disabled={validatingState} onClick={this.closeAddFeed} />\r\n            <Button color='green' disabled={validatingState || this.state.invalidAttempted || !this.state.addFeedLink || !this.state.addFeedChannel} content={validatingState ? 'Validating...' : 'Add'} onClick={this.addFeed} />\r\n          </FeedButtonsContainer>\r\n        } disabled={validatingState}  open={open} onClose={this.closeAddFeed}>\r\n          <AddFeedModalContent>\r\n              <h5>Link</h5>\r\n              <Input disabled={validatingState} onChange={e => this.setState({ addFeedLink: e.target.value, invalidAttempted: false })} fluid/>\r\n            <Divider />\r\n            <h5>Channel</h5>\r\n            <ChannelDropdown disabled={validatingState} search options={dropdownOptions} selection fluid onChange={(e, data) => this.setState({ addFeedChannel: data.value })} />\r\n            <Divider />\r\n            <h5>Title</h5>\r\n            <Input disabled={validatingState} fluid placeholder='(Can be left blank)' onChange={e => this.setState({ addFeedTitle: e.target.value })} />\r\n            <Divider />\r\n            <Transition visible={!!this.state.validatingFeedback} animation='drop' duration={300}>\r\n              <p style={{ color: colors.discord.red }}>{this.state.validatingFeedback}</p>\r\n            </Transition>\r\n          </AddFeedModalContent>\r\n        </DiscordModal>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddFeedModal)\r\n","import React, { Component } from 'react'\r\nimport colors from '../../../../constants/colors'\r\nimport styled from 'styled-components'\r\nimport { addFeed, removeFeed, setGuildChannels, unauthorizeGuild } from '../../../../actions/index-actions'\r\nimport { lighten, darken } from 'polished'\r\nimport { Table, Modal, Transition, Popup, Button, Header, TransitionablePortal, Input, Dropdown, Divider } from 'semantic-ui-react'\r\nimport axios from 'axios'\r\nimport DiscordModal from '../../../utils/Modal'\r\nimport { connect } from 'react-redux'\r\nimport ViewFeedModal from './ViewFeedModal'\r\nimport AddFeedModal from './AddFeedModal'\r\n\r\nconst LINK_VALIDATION = {\r\n  PENDING: 0,\r\n  VALIDATING: 1,\r\n  VALID: 2,\r\n  INVALID: 3 \r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    feeds: state.feeds,\r\n    channels: state.channels,\r\n    guildId: state.activeGuild\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    addFeed: feed => dispatch(addFeed(feed)),\r\n    removeFeed: rssName => dispatch(removeFeed(rssName))\r\n  }\r\n}\r\n\r\nconst SectionHeader = styled.h2`\r\n  color: ${colors.discord.white};\r\n  margin-bottom: 1em;\r\n  text-align: left;\r\n`\r\n\r\nconst FeedRow = styled(Table.Row)`\r\n  cursor: pointer;\r\n`\r\n\r\nconst TableTop = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  width: 100%;\r\n`\r\n\r\n\r\nclass FeedTable extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n      unauthorized: false,\r\n      channels: {},\r\n      viewFeed: {\r\n        open: false,\r\n        rssName: '',\r\n        title: '',\r\n        channel: '',\r\n        link: ''\r\n      },\r\n      addFeedOpen : false,\r\n      modal: {\r\n        header: undefined,\r\n        footer: undefined,\r\n        content: undefined\r\n      }\r\n    }\r\n  }\r\n\r\n  closeAddFeed = () => {\r\n    this.setState({ openAddFeed: false, validatingState: LINK_VALIDATION.PENDING, validatingFeedback: null })\r\n  }\r\n\r\n  addFeed = () => {\r\n    this.setState({ validatingState: LINK_VALIDATION.VALIDATING, validatingFeedback: null })\r\n    axios.post(`/api/guilds/${this.props.guildId}/feeds`, {\r\n      feed: this.state.addFeedLink,\r\n      channel: this.state.addFeedChannel,\r\n      title: this.state.addFeedTitle\r\n    }).then(({ data }) => {\r\n      this.props.addFeed({\r\n        rssName: data._rssName,\r\n        title: data.title,\r\n        channel: data.channel,\r\n        link: data.link\r\n      })\r\n      this.setState({ validatingState: LINK_VALIDATION.VALID, validatingFeedback: undefined, openAddFeed: false })\r\n    }).catch(err => {\r\n      console.log(err.response)\r\n      const errMessage = err.response && err.response.data ? err.response.data.message : err.message\r\n      this.setState({ validatingState: LINK_VALIDATION.INVALID, validatingFeedback: errMessage, addFeedDisabled: true })\r\n    })\r\n  }\r\n\r\n  render () {\r\n    const { guildId, feeds, channels } = this.props\r\n    const guildChannels = channels[guildId]\r\n    const dropdownOptions = []\r\n    if (guildChannels) {\r\n      for (const channelId in guildChannels) {\r\n        const channel = guildChannels[channelId]\r\n        dropdownOptions.push({ text: `#${channel.name}`, value: channelId })\r\n      }\r\n    }\r\n\r\n    const guildFeeds = guildId && feeds[guildId] ? feeds[guildId] : []\r\n    // const guildFeeds = [\r\n    //   { title: 'some title', channel: '12334gjmsr9', link: 'q3etjgmiewj46ty', rssName: '1' },\r\n    //   { title: 'some title', channel: '12334gjmsr9', link: 'q3etjgmiewj46ty', rssName: '12' },\r\n    //   { title: 'some title', channel: '12334gjmsr9', link: 'q3etjgmiewj46ty', rssName: '2351' },\r\n    //   { title: 'some title', channel: '12334gjmsr9', link: 'q3etjgmiewj46ty', rssName: '1346' },\r\n    //   { title: 'some title', channel: '12334gjmsr9', link: 'q3etjgmiewj46ty', rssName: '14786' },\r\n    //   { title: 'some title', channel: '12334gjmsr9', link: 'q3etjgmiewj46ty', rssName: '1123' },\r\n    //   { title: 'some title', channel: '12334gjmsr9', link: 'q3etjgmiewj46ty', rssName: '1869' },\r\n    // ]\r\n    const tableRows = guildFeeds.map(feed => {\r\n      return (\r\n        <Popup key={feed.rssName} trigger={\r\n          <FeedRow onClick={e => {\r\n            this.setState({ open: true,\r\n              viewFeed: {\r\n                open: true,\r\n                ...feed\r\n              } })\r\n          }}>\r\n            <Table.Cell>{feed.title}</Table.Cell>\r\n            <Table.Cell>{feed.link}</Table.Cell>\r\n            <Table.Cell>{channels[guildId] && channels[guildId][feed.channel] ? `#${channels[guildId][feed.channel].name}` : feed.channelName ? `#${feed.channelName}` : feed.channel}</Table.Cell>\r\n            <Table.Cell>{feed.status === undefined ? 'OK' : feed.status}</Table.Cell>\r\n          </FeedRow>} content='string' inverted position='left center' hoverable />\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div>\r\n        <ViewFeedModal feed={this.state.viewFeed} open={this.state.viewFeed.open} onClose={() => this.setState({ viewFeed: { ...this.state.viewFeed, open: false } })} />\r\n        <AddFeedModal open={this.state.addFeedOpen} onClose={() => this.setState({ addFeedOpen: false })} />\r\n\r\n        <SectionHeader>Feed Management</SectionHeader>\r\n        <TableTop>\r\n          <Input placeholder='Search...' />\r\n          <Button content='Add New' onClick={() => this.setState({ addFeedOpen: true })} />\r\n        </TableTop>\r\n        <Table celled selectable>\r\n          <Table.Header>\r\n            <FeedRow>\r\n              <Table.HeaderCell>Name</Table.HeaderCell>\r\n              <Table.HeaderCell>Link</Table.HeaderCell>\r\n              <Table.HeaderCell>Channel</Table.HeaderCell>\r\n              <Table.HeaderCell>Status</Table.HeaderCell>\r\n            </FeedRow>\r\n          </Table.Header>\r\n          <Table.Body>\r\n            {tableRows}\r\n          </Table.Body>\r\n        </Table>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(FeedTable)\r\n","import React, { Component } from 'react'\r\nimport colors from '../../../constants/colors'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken } from 'polished'\r\nimport { setGuildChannels, setGuildAuthorization, setActiveGuild } from '../../../actions/index-actions'\r\nimport { Divider, Input, Button, List, Popup, Dropdown } from 'semantic-ui-react'\r\nimport DiscordAvatar from '../../utils/DiscordAvatar'\r\nimport FeedTable from './FeedTable/index'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport Alert from 'react-s-alert'\r\nimport axios from 'axios'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    guildId: state.activeGuild,\r\n    guilds: state.guilds\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setGuildChannels: channels => dispatch(setGuildChannels(channels)),\r\n    setGuildAuthorization: guildId => dispatch(setGuildAuthorization(guildId))\r\n  }\r\n}\r\n\r\nconst ServerBackground = styled.div`\r\n  position: relative;\r\n  background: url('https://i.imgur.com/eS4IxK3.png');\r\n  /* background-size: cover;\r\n  background-attachment: fixed; */\r\n  /* background-color:  ${lighten(0.02, colors.discord.notQuiteblack)}; */\r\n  width: 100%;\r\n  height: 18em;\r\n  margin-bottom: 11em;\r\n  /* z-index: 10; */\r\n`\r\n\r\nconst ServerBlock = styled.div`\r\n  display: flex;\r\n  flex-direction: row;\r\n  position: absolute;\r\n  bottom: -7em;\r\n  left: 7em;\r\n  /* background: green; */\r\n  height: 14em;\r\n`\r\n\r\nconst ServerBlockTextContainer = styled.div`\r\n  justify-content: center;\r\n  /* background: green; */\r\n  padding: 2em;\r\n  padding-bottom: 2.75em;\r\n  text-align: left;\r\n  display: flex;\r\n  flex-direction: column;\r\n`\r\n\r\nconst ServerBlockTitle = styled.h1`\r\n  text-align: end;\r\n  color: white;\r\n  margin: 0;\r\n`\r\n\r\nconst ServerBlockText = styled.p`\r\n  padding-top: 1.5em;\r\n  color: ${lighten(0.5, colors.discord.darkButNotBlack)};\r\n`\r\n\r\nconst GuildContentWrapper = styled.div`\r\n  /* margin-top: 10em; */\r\n  margin-left: 7em;\r\n  margin-right: 7em;\r\n  /* background: green; */\r\n  /* align-self: center;\r\n  justify-self: center; */\r\n`\r\n\r\nconst SettingBox = styled.div`\r\n  display: flex;\r\n  flex-grow: 1;\r\n  flex-direction: column;\r\n  text-align: left;\r\n  margin-bottom: 1em;\r\n  h4 {\r\n    color: ${colors.discord.text};\r\n  }\r\n  p {\r\n    color: ${darken(0.3, colors.discord.text)}\r\n  }\r\n  input {\r\n    margin-bottom: 0.5em !important;\r\n  }\r\n  /* background: gray; */\r\n`\r\n\r\nconst Card = styled(SettingBox)`\r\n  display: flex;\r\n  align-content: center;\r\n  align-items: center;\r\n  h3 {\r\n    color: white;\r\n    text-align: center;\r\n    align-content: center;\r\n    justify-content: center;\r\n    align-self: center;\r\n  }\r\n`\r\n\r\nclass Dashboard extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentDidUpdate (prevProps) {\r\n    if (this.props.guildId === prevProps.guildId || !this.props.guildId) return\r\n    console.log(`requesting with`, this.props.guildId)\r\n    axios.get(`/api/guilds/${this.props.guildId}/channels`)\r\n      .then(({ data }) => {\r\n        const guildStateChanels = {}\r\n        for (const channel of data) guildStateChanels[channel.id] = channel\r\n        this.props.setGuildChannels(guildStateChanels)\r\n        this.props.setGuildAuthorization(true)\r\n      }).catch(err => {\r\n        if (err.response.status === 403) this.props.setGuildAuthorization(false)\r\n        console.log('dashboard index channels get', err.response)\r\n      })\r\n  }\r\n\r\n  render () {\r\n    const { guilds, guildId } = this.props\r\n    const ref = guilds[guildId]\r\n    const authorized = !ref || ref.authorized === undefined ? '...' : ref.authorized ? 'AUTHORIZED' : 'UNAUTHORIZED'\r\n    const avatar = guildId ? `https://cdn.discordapp.com/icons/${guildId}/${ref.icon}?size=256` : undefined\r\n    const guildName = guildId ? ref.name : undefined\r\n\r\n    return (\r\n      <div>\r\n        <ServerBackground>\r\n          {/* Hello world */}\r\n          <ServerBlock>\r\n            <DiscordAvatar src={avatar} width={'14em'} />\r\n            <ServerBlockTextContainer>\r\n              <ServerBlockTitle>{guildName || 'No Server Selected'}</ServerBlockTitle>\r\n              <ServerBlockText>{authorized}</ServerBlockText>\r\n            </ServerBlockTextContainer>\r\n          </ServerBlock>\r\n        </ServerBackground>\r\n        <GuildContentWrapper>\r\n          <FeedTable />\r\n          <Divider />\r\n          {/* <SettingBoxContainerWrapper>\r\n            <SettingBoxContainer>\r\n              <Card>\r\n                <h4>Feed Limit</h4>\r\n                <div><h3>5 Minutes</h3></div>\r\n              </Card>\r\n              <Card>\r\n                <h4>Refresh Rate</h4>\r\n              </Card>\r\n            </SettingBoxContainer>\r\n            <SettingBoxContainer>\r\n              <SettingBox>\r\n                <h4>Timezone</h4>\r\n                <p>Hello world</p>\r\n                <HorizontalInput>\r\n                  <Input disabled fluid />\r\n                  <Button content='Edit' />\r\n                </HorizontalInput>\r\n              </SettingBox>\r\n              <SettingBox>\r\n                <h4>Feed Alerts Prefix</h4>\r\n                <p>Hello world</p>\r\n                <AlertList>\r\n                  <List.Item>4678i946691</List.Item>\r\n                  <List.Item>1468i579365</List.Item>\r\n                  <List.Item>124q506845e</List.Item>\r\n                  <List.Item>12450398502</List.Item>\r\n                  <List.Item>12094353645</List.Item>\r\n                </AlertList>\r\n                <Button content='Edit' />\r\n              </SettingBox>\r\n            </SettingBoxContainer>\r\n            <SettingBoxContainer>\r\n              <SettingBox>\r\n                <h4>Command Prefix</h4>\r\n                <p>Hello world</p>\r\n                <HorizontalInput>\r\n                  <Input disabled fluid />\r\n                  <Button content='Edit' />\r\n                </HorizontalInput>\r\n              </SettingBox>\r\n              <SettingBox>\r\n                <h4>Date Language</h4>\r\n                <p>Hello world</p>\r\n                <HorizontalInput>\r\n                  <Input disabled fluid />\r\n                  <Button content='Edit' />\r\n                </HorizontalInput>\r\n              </SettingBox>\r\n              <SettingBox>\r\n                <h4>Date Format</h4>\r\n                <p>Hello world</p>\r\n                <HorizontalInput>\r\n                  <Input disabled fluid />\r\n                  <Button content='Edit' />\r\n                </HorizontalInput>\r\n              </SettingBox>\r\n            </SettingBoxContainer>\r\n          </SettingBoxContainerWrapper>\r\n          <Divider />\r\n          <h3>Title</h3> */}\r\n        </GuildContentWrapper>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nDashboard.propTypes = {\r\n  guildId: PropTypes.string,\r\n  guilds: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { changePage } from '../../../actions/index-actions'\r\nimport pages from '../../../constants/pages'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToThisPage: () => dispatch(changePage(pages.FILTERS))\r\n  }\r\n}\r\n\r\nclass Filters extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setToThisPage()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <p>Filters page</p>\r\n    )\r\n  }\r\n}\r\n\r\nFilters.propTypes = {\r\n  setToThisPage: PropTypes.func\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Filters))\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { changePage } from '../../../actions/index-actions'\r\nimport pages from '../../../constants/pages'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToThisPage: () => dispatch(changePage(pages.SUBSCRIPTIONS))\r\n  }\r\n}\r\n\r\nclass Subscriptions extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setToThisPage()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <p>Subscriptions page</p>\r\n    )\r\n  }\r\n}\r\n\r\nSubscriptions.propTypes = {\r\n  setToThisPage: PropTypes.func\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Subscriptions))\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { changePage } from '../../../actions/index-actions'\r\nimport pages from '../../../constants/pages'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToThisPage: () => dispatch(changePage(pages.FAQ))\r\n  }\r\n}\r\n\r\nclass FAQ extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setToThisPage()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <p>FAQ page</p>\r\n    )\r\n  }\r\n}\r\n\r\nFAQ.propTypes = {\r\n  setToThisPage: PropTypes.func\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(FAQ))\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { changePage } from '../../../actions/index-actions'\r\nimport pages from '../../../constants/pages'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToThisPage: () => dispatch(changePage(pages.SUPPORT))\r\n  }\r\n}\r\n\r\nclass Support extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setToThisPage()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <p>Support page</p>\r\n    )\r\n  }\r\n}\r\n\r\nSupport.propTypes = {\r\n  setToThisPage: PropTypes.func\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(Support))\r\n","import React, { Component } from 'react'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { changePage } from '../../../actions/index-actions'\r\nimport pages from '../../../constants/pages'\r\nimport PropTypes from 'prop-types'\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setToThisPage: () => dispatch(changePage(pages.MISC_OPTIONS))\r\n  }\r\n}\r\n\r\nclass MiscOptions extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  componentWillMount () {\r\n    this.props.setToThisPage()\r\n  }\r\n\r\n  render () {\r\n    return (\r\n      <p>MiscOptions page</p>\r\n    )\r\n  }\r\n}\r\n\r\nMiscOptions.propTypes = {\r\n  setToThisPage: PropTypes.func\r\n}\r\n\r\nexport default withRouter(connect(null, mapDispatchToProps)(MiscOptions))\r\n","import React, { Component } from 'react'\r\nimport colors from '../../constants/colors'\r\nimport styled from 'styled-components'\r\nimport { lighten, darken } from 'polished'\r\nimport Dashboard from './Dashboard/index'\r\nimport Filters from './Filters/index'\r\nimport Subscriptions from './Subscriptions/index'\r\nimport FAQ from './FAQ/index'\r\nimport Support from './Support/index'\r\nimport MiscOptions from './MiscOptions/index'\r\nimport { Switch, Route, withRouter } from 'react-router-dom'\r\nimport { Button, Dropdown } from 'semantic-ui-react'\r\nimport { connect } from 'react-redux'\r\nimport PropTypes from 'prop-types'\r\nimport { setActiveGuild } from '../../actions/index-actions'\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    guildId: state.activeGuild,\r\n    guilds: state.guilds\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    setActiveGuild: guildId => dispatch(setActiveGuild(guildId))\r\n  }\r\n}\r\n\r\nconst Body = styled.div`\r\n  padding-top: 20;\r\n  height: 100vh;\r\n  width: 100%;\r\n  background-color: ${lighten(0.05, colors.discord.notQuiteblack)};\r\n  text-align: center;\r\n  overflow-y: auto;\r\n`\r\n\r\nconst TitleContainer = styled.div`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  position: relative;\r\n  z-index: 10;\r\n  padding-left: 2em;\r\n  padding-right: 2em;\r\n  height: 5em;\r\n  box-shadow: 0 2px 0px 0 rgba(0,0,0,0.2);\r\n  align-items: center;\r\n  > div {\r\n    display: flex;\r\n\r\n  }\r\n  h3 {\r\n    margin: 0;\r\n    color: ${darken(0.2, 'white')};\r\n    align-self: center;\r\n    margin-right: 2em;\r\n  }\r\n`\r\n\r\nconst ServerDropdown = styled(Dropdown)`\r\n  font-size: 1.25em !important;\r\n\r\n`\r\n\r\nclass ContentBody extends Component {\r\n  constructor () {\r\n    super()\r\n    this.state = {\r\n\r\n    }\r\n  }\r\n\r\n  render () {\r\n    const { guildId, guilds } = this.props\r\n    const dropdownOptions = []\r\n    for (const id in guilds) {\r\n      dropdownOptions.push({ text: guilds[id].name, value: id })\r\n    }\r\n\r\n    return (\r\n      <Body>\r\n        {/* <TopNavBar /> */}\r\n        <TitleContainer>\r\n          <div>\r\n            {/* <h3>{guild ? guild.name : 'No Server Selected'}</h3> */}\r\n            {/* <Dropdown search selection defaultValue={'szdoighjo'} options={dropdownDummyOptions} /> */}\r\n\r\n            <ServerDropdown options={dropdownOptions} search selection value={guildId} onChange={(e, data) => this.props.setActiveGuild(data.value)} />\r\n          </div>\r\n          <h3>Status</h3>\r\n        </TitleContainer>\r\n        <Switch>\r\n          <Route exact path='/' component={Dashboard} />\r\n          <Route exact path='/filters' component={Filters} />\r\n          <Route exact path='/subscriptions' component={Subscriptions} />\r\n          <Route exact path='/miscoptions' component={MiscOptions} />\r\n          <Route exact path='/faq' component={FAQ} />\r\n          <Route exact path='/support' component={Support} />\r\n          <Route component={Dashboard} />\r\n        </Switch>\r\n        {/* <Dashboard /> */}\r\n        {/* <BodyTop>Hello world</BodyTop> */}\r\n        {/* Hello World */}\r\n      </Body>\r\n    )\r\n  }\r\n}\r\n\r\nContentBody.propTypes = {\r\n  guildId: PropTypes.string,\r\n  guilds: PropTypes.object\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContentBody)\r\n","import React, { Component } from 'react'\r\n// import ReconnectingWebSocket from 'reconnecting-websocket'\r\nimport axios from 'axios'\r\nimport './js/index'\r\nimport './App.css'\r\nimport './App.scss'\r\nimport styled from 'styled-components'\r\nimport LeftMenu from './js/components/LeftMenu'\r\nimport ContentBody from './js/components/ContentBody/index'\r\nimport { connect } from 'react-redux'\r\n// import 'semantic-ui-css/semantic.min.css'\r\nimport './semantic/dist/semantic.min.css'\r\nimport PropTypes from 'prop-types'\r\nimport Alert from 'react-s-alert'\r\nimport 'react-s-alert/dist/s-alert-default.css'\r\nimport 'react-s-alert/dist/s-alert-css-effects/scale.css'\r\n\r\nconst MainContainer = styled.div`\r\n  width: 100vw;\r\n  max-width: 100%;\r\n  display: flex;\r\n  flex-direction: row;\r\n`\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    initializeState: data => dispatch({ type: 'INIT_STATE', data })\r\n  }\r\n}\r\n\r\nclass App extends Component {\r\n  constructor () {\r\n    super()\r\n\r\n    this.state = {\r\n      serverResponse: '',\r\n      socketStatus: 'connecting...',\r\n      socketError: undefined,\r\n      loaded: false\r\n    }\r\n\r\n    const socket = new WebSocket('ws://localhost:8081/ping')\r\n    this.socket = socket\r\n\r\n    socket.onopen = event => {\r\n      // console.log('socket open')\r\n      // console.log(event)\r\n      this.setState({ socketStatus: 'open', socketError: undefined })\r\n    }\r\n\r\n    socket.onerror = err => {\r\n      // console.log('socket error')\r\n      // console.log(err)\r\n      this.setState({ socketStatus: 'error', socketError: err })\r\n    }\r\n\r\n    socket.onmessage = message => {\r\n      // console.log('socket message')\r\n      // console.log(message)\r\n      this.setState({ serverResponse: message.data })\r\n    }\r\n\r\n    socket.onclose = event => {\r\n      // console.log('socket closed')\r\n      // console.log(event)\r\n      this.setState({ socketStatus: 'closed', socketError: undefined })\r\n    }\r\n\r\n\r\n  }\r\n\r\n  componentWillMount () {\r\n    Promise.all([ axios.get('/api/users/@me'), axios.get('/api/users/@me/guilds') ])\r\n      .then(([ userResp, guildResp ]) => {\r\n        const guildList = guildResp.data\r\n        const newState = {\r\n          user: userResp.data,\r\n          guilds: {}, // By guild id\r\n          feeds: {}, // by guild id, with array of feeds\r\n          filters: {}, // by guild id, then by feed id\r\n          subscriptions: {}, // by guild id, then by feed id, with array of subscribers\r\n          channels: {}, // by guild id, then by channel id\r\n          activeGuild: ''\r\n        }\r\n        for (const guildData of guildList) {\r\n          const guildRss = guildData.profile\r\n          const guildDiscord = guildData.discord\r\n          const guildId = guildDiscord.id\r\n          if (!newState.activeGuild) {\r\n            newState.activeGuild = guildId\r\n            newState.channels[guildId] = {}\r\n          }\r\n\r\n          // Guild settings\r\n          newState.guilds[guildId] = {\r\n            icon: guildDiscord.icon,\r\n            name: guildDiscord.name,\r\n            owner: guildDiscord.owner,\r\n            permissions: guildDiscord.permissions,\r\n            sendAlertsTo: guildRss.sendAlertsTo,\r\n            dateLanguage: guildRss.dateLanguage,\r\n            dateFormat: guildRss.dateFormat,\r\n            prefix: guildRss.prefix,\r\n            timezone: guildRss.timezone\r\n          }\r\n          const rssList = guildRss.sources\r\n          if (!rssList) continue\r\n          for (const rssName in rssList) {\r\n            const source = rssList[rssName]\r\n\r\n            // Feeds\r\n            if (!newState.feeds[guildId]) newState.feeds[guildId] = []\r\n            newState.feeds[guildId].push({\r\n              rssName,\r\n              title: source.title,\r\n              channel: source.channel,\r\n              link: source.link,\r\n              channelName: source.channelName,\r\n              checkTitles: source.checkTitles,\r\n              imgPreviews: source.imgPreviews,\r\n              imgLinksExistence: source.imgLinksExistence,\r\n              checkDates: source.checkDates,\r\n              formatTables: source.formatTables,\r\n              toggleRoleMentions: source.toggleRoleMentions\r\n            })\r\n\r\n            // Feed Filters\r\n            if (source.filters) newState.filters[guildId][rssName] = source.filters\r\n\r\n            // Feed Subscriptions\r\n            if ((source.globalSubscriptions && source.globalSubscriptions.length > 0) || (source.filteredSubscriptions && source.filteredSubscriptions.length > 0)) {\r\n              if (!newState.subscriptions[guildId]) newState.subscriptions[guildId] = {}\r\n              if (!newState.subscriptions[guildId][rssName]) newState.subscriptions[guildId][rssName] = []\r\n              if (source.globalSubscriptions) newState.subscriptions[guildId][rssName] = newState.subscriptions[guildId][rssName].concat(source.globalSubscriptions)\r\n              if (source.filteredSubscriptions) newState.subscriptions[guildId][rssName] = newState.subscriptions[guildId][rssName].concat(source.filteredSubscriptions)\r\n            }\r\n          }\r\n        }\r\n\r\n        // if (newState.activeGuild) {\r\n        //   console.log('active guild', newState.activeGuild)\r\n        //   axios.get(`/api/guilds/${newState.activeGuild}/channels`)\r\n        //     .then(({ data }) => {\r\n        //       for (const channel of data) newState.channels[newState.activeGuild][channel.id] = channel\r\n        //       this.props.initializeState(newState)\r\n        //       this.setState({ loaded: true })\r\n        //     }).catch(err => {\r\n        //       console.log(err.response || err.message)\r\n        //     })\r\n        // } else {\r\n        this.props.initializeState(newState)\r\n        this.setState({ loaded: true })\r\n        // }\r\n      }).catch(err => console.log(err.response || err.message))\r\n  }\r\n\r\n  render () {\r\n    // if (!this.state.loaded) return <h1>Not Ready</h1>\r\n    return (\r\n      <div className='App'>\r\n        {/* <TopNavBar /> */}\r\n        <MainContainer>\r\n          <LeftMenu />\r\n          <ContentBody />\r\n        </MainContainer>\r\n        <Alert stack={{ limit: 3 }} html />\r\n        {/* <button onClick={() => {\r\n          console.log('clicked')\r\n          // The API is fully functioning, and works through the package.json proxy once the server is up\r\n          // axios.post('/api/guilds/240535022820392961/feeds')\r\n        }}>fetch</button> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nApp.propTypes = {\r\n  initializeState: PropTypes.func\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(App)\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n\r\nimport * as serviceWorker from './serviceWorker'\r\n// import index from './js/index.js'\r\nimport { Provider } from 'react-redux'\r\nimport store from './js/store/index-store.js'\r\nimport { BrowserRouter, Route } from 'react-router-dom'\r\n\r\nimport './index.css'\r\nimport App from './App'\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    <BrowserRouter>\r\n      <Route path='/' component={App} />\r\n    </BrowserRouter>\r\n  </Provider>, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister()\r\n"],"sourceRoot":""}