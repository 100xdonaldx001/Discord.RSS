/*
 * # Semantic UI - 2.4.2
 * https://github.com/Semantic-Org/Semantic-UI
 * http://www.semantic-ui.com/
 *
 * Copyright 2014 Contributors
 * Released under the MIT license
 * http://opensource.org/licenses/MIT
 *
 */
!(function ($, Y, G, _) { 'use strict'; Y = void 0 !== Y && Y.Math == Math ? Y : typeof self !== 'undefined' && self.Math == Math ? self : Function('return this')(), $.fn.dropdown = function (P) { var z; var V = $(this); var H = $(G); var N = V.selector || ''; var U = 'ontouchstart' in G.documentElement; var B = (new Date()).getTime(); var W = []; var K = P; var Q = typeof K === 'string'; var X = [].slice.call(arguments, 1); return V.each(function (n) { var e; var t; var i; var s; var a; var o; var r; var m; var h = $.isPlainObject(P) ? $.extend(!0, {}, $.fn.dropdown.settings, P) : $.extend({}, $.fn.dropdown.settings); var g = h.className; var c = h.message; var l = h.fields; var p = h.keys; var b = h.metadata; var u = h.namespace; var d = h.regExp; var y = h.selector; var f = h.error; var v = h.templates; var w = '.' + u; var x = 'module-' + u; var C = $(this); var S = $(h.context); var A = C.find(y.text); var T = C.find(y.search); var k = C.find(y.sizer); var R = C.find(y.input); var D = C.find(y.icon); var L = C.prev().find(y.text).length > 0 ? C.prev().find(y.text) : C.prev(); var q = C.children(y.menu); var F = q.find(y.item); var O = !1; var I = !1; var E = !1; var M = this; var j = C.data(x); m = { initialize: function () { m.debug('Initializing dropdown', h), m.is.alreadySetup() ? m.setup.reference() : (m.setup.layout(), h.values && m.change.values(h.values), m.refreshData(), m.save.defaults(), m.restore.selected(), m.create.id(), m.bind.events(), m.observeChanges(), m.instantiate()) }, instantiate: function () { m.verbose('Storing instance of dropdown', m), j = m, C.data(x, m) }, destroy: function () { m.verbose('Destroying previous dropdown', C), m.remove.tabbable(), C.off(w).removeData(x), q.off(w), H.off(s), m.disconnect.menuObserver(), m.disconnect.selectObserver() }, observeChanges: function () { 'MutationObserver' in Y && (o = new MutationObserver(m.event.select.mutation), r = new MutationObserver(m.event.menu.mutation), m.debug('Setting up mutation observer', o, r), m.observe.select(), m.observe.menu()) }, disconnect: { menuObserver: function () { r && r.disconnect() }, selectObserver: function () { o && o.disconnect() } }, observe: { select: function () { m.has.input() && o.observe(C[0], { childList: !0, subtree: !0 }) }, menu: function () { m.has.menu() && r.observe(q[0], { childList: !0, subtree: !0 }) } }, create: { id: function () { a = (Math.random().toString(16) + '000000000').substr(2, 8), s = '.' + a, m.verbose('Creating unique id for element', a) }, userChoice: function (e) { var n, i, s; return !!(e = e || m.get.userValues()) && (e = $.isArray(e) ? e : [e], $.each(e, function (e, t) { !1 === m.get.item(t) && (s = h.templates.addition(m.add.variables(c.addResult, t)), i = $('<div />').html(s).attr('data-' + b.value, t).attr('data-' + b.text, t).addClass(g.addition).addClass(g.item), h.hideAdditions && i.addClass(g.hidden), n = n === _ ? i : n.add(i), m.verbose('Creating user choices for value', t, i)) }), n) }, userLabels: function (e) { var t = m.get.userValues(); t && (m.debug('Adding user labels', t), $.each(t, function (e, t) { m.verbose('Adding custom user value'), m.add.label(t, t) })) }, menu: function () { q = $('<div />').addClass(g.menu).appendTo(C) }, sizer: function () { k = $('<span />').addClass(g.sizer).insertAfter(T) } }, search: function (e) { e = e !== _ ? e : m.get.query(), m.verbose('Searching for query', e), m.has.minCharacters(e) ? m.filter(e) : m.hide() }, select: { firstUnfiltered: function () { m.verbose('Selecting first non-filtered element'), m.remove.selectedItem(), F.not(y.unselectable).not(y.addition + y.hidden).eq(0).addClass(g.selected) }, nextAvailable: function (e) { var t = (e = e.eq(0)).nextAll(y.item).not(y.unselectable).eq(0); var n = e.prevAll(y.item).not(y.unselectable).eq(0); t.length > 0 ? (m.verbose('Moving selection to', t), t.addClass(g.selected)) : (m.verbose('Moving selection to', n), n.addClass(g.selected)) } }, setup: { api: function () { var e = { debug: h.debug, urlData: { value: m.get.value(), query: m.get.query() }, on: !1 }; m.verbose('First request, initializing API'), C.api(e) }, layout: function () { C.is('select') && (m.setup.select(), m.setup.returnedObject()), m.has.menu() || m.create.menu(), m.is.search() && !m.has.search() && (m.verbose('Adding search input'), T = $('<input />').addClass(g.search).prop('autocomplete', 'off').insertBefore(A)), m.is.multiple() && m.is.searchSelection() && !m.has.sizer() && m.create.sizer(), h.allowTab && m.set.tabbable() }, select: function () { var e = m.get.selectValues(); m.debug('Dropdown initialized on a select', e), C.is('select') && (R = C), R.parent(y.dropdown).length > 0 ? (m.debug('UI dropdown already exists. Creating dropdown menu only'), C = R.closest(y.dropdown), m.has.menu() || m.create.menu(), q = C.children(y.menu), m.setup.menu(e)) : (m.debug('Creating entire dropdown from select'), C = $('<div />').attr('class', R.attr('class')).addClass(g.selection).addClass(g.dropdown).html(v.dropdown(e)).insertBefore(R), R.hasClass(g.multiple) && !1 === R.prop('multiple') && (m.error(f.missingMultiple), R.prop('multiple', !0)), R.is('[multiple]') && m.set.multiple(), R.prop('disabled') && (m.debug('Disabling dropdown'), C.addClass(g.disabled)), R.removeAttr('class').detach().prependTo(C)), m.refresh() }, menu: function (e) { q.html(v.menu(e, l)), F = q.find(y.item) }, reference: function () { m.debug('Dropdown behavior was called on select, replacing with closest dropdown'), C = C.parent(y.dropdown), j = C.data(x), M = C.get(0), m.refresh(), m.setup.returnedObject() }, returnedObject: function () { var e = V.slice(0, n); var t = V.slice(n + 1); V = e.add(C).add(t) } }, refresh: function () { m.refreshSelectors(), m.refreshData() }, refreshItems: function () { F = q.find(y.item) }, refreshSelectors: function () { m.verbose('Refreshing selector cache'), A = C.find(y.text), T = C.find(y.search), R = C.find(y.input), D = C.find(y.icon), L = C.prev().find(y.text).length > 0 ? C.prev().find(y.text) : C.prev(), q = C.children(y.menu), F = q.find(y.item) }, refreshData: function () { m.verbose('Refreshing cached metadata'), F.removeData(b.text).removeData(b.value) }, clearData: function () { m.verbose('Clearing metadata'), F.removeData(b.text).removeData(b.value), C.removeData(b.defaultText).removeData(b.defaultValue).removeData(b.placeholderText) }, toggle: function () { m.verbose('Toggling menu visibility'), m.is.active() ? m.hide() : m.show() }, show: function (e) { if (e = $.isFunction(e) ? e : function () {}, !m.can.show() && m.is.remote() && (m.debug('No API results retrieved, searching before show'), m.queryRemote(m.get.query(), m.show)), m.can.show() && !m.is.active()) { if (m.debug('Showing dropdown'), !m.has.message() || m.has.maxSelections() || m.has.allResultsFiltered() || m.remove.message(), m.is.allFiltered()) return !0; !1 !== h.onShow.call(M) && m.animate.show(function () { m.can.click() && m.bind.intent(), m.has.menuSearch() && m.focusSearch(), m.set.visible(), e.call(M) }) } }, hide: function (e) { e = $.isFunction(e) ? e : function () {}, m.is.active() && !m.is.animatingOutward() && (m.debug('Hiding dropdown'), !1 !== h.onHide.call(M) && m.animate.hide(function () { m.remove.visible(), e.call(M) })) }, hideOthers: function () { m.verbose('Finding other dropdowns to hide'), V.not(C).has(y.menu + '.' + g.visible).dropdown('hide') }, hideMenu: function () { m.verbose('Hiding menu  instantaneously'), m.remove.active(), m.remove.visible(), q.transition('hide') }, hideSubMenus: function () { var e = q.children(y.item).find(y.menu); m.verbose('Hiding sub menus', e), e.transition('hide') }, bind: { events: function () { U && m.bind.touchEvents(), m.bind.keyboardEvents(), m.bind.inputEvents(), m.bind.mouseEvents() }, touchEvents: function () { m.debug('Touch device detected binding additional touch events'), m.is.searchSelection() || m.is.single() && C.on('touchstart' + w, m.event.test.toggle), q.on('touchstart' + w, y.item, m.event.item.mouseenter) }, keyboardEvents: function () { m.verbose('Binding keyboard events'), C.on('keydown' + w, m.event.keydown), m.has.search() && C.on(m.get.inputEvent() + w, y.search, m.event.input), m.is.multiple() && H.on('keydown' + s, m.event.document.keydown) }, inputEvents: function () { m.verbose('Binding input change events'), C.on('change' + w, y.input, m.event.change) }, mouseEvents: function () { m.verbose('Binding mouse events'), m.is.multiple() && C.on('click' + w, y.label, m.event.label.click).on('click' + w, y.remove, m.event.remove.click), m.is.searchSelection() ? (C.on('mousedown' + w, m.event.mousedown).on('mouseup' + w, m.event.mouseup).on('mousedown' + w, y.menu, m.event.menu.mousedown).on('mouseup' + w, y.menu, m.event.menu.mouseup).on('click' + w, y.icon, m.event.icon.click).on('focus' + w, y.search, m.event.search.focus).on('click' + w, y.search, m.event.search.focus).on('blur' + w, y.search, m.event.search.blur).on('click' + w, y.text, m.event.text.focus), m.is.multiple() && C.on('click' + w, m.event.click)) : (h.on == 'click' ? C.on('click' + w, m.event.test.toggle) : h.on == 'hover' ? C.on('mouseenter' + w, m.delay.show).on('mouseleave' + w, m.delay.hide) : C.on(h.on + w, m.toggle), C.on('click' + w, y.icon, m.event.icon.click).on('mousedown' + w, m.event.mousedown).on('mouseup' + w, m.event.mouseup).on('focus' + w, m.event.focus), m.has.menuSearch() ? C.on('blur' + w, y.search, m.event.search.blur) : C.on('blur' + w, m.event.blur)), q.on('mouseenter' + w, y.item, m.event.item.mouseenter).on('mouseleave' + w, y.item, m.event.item.mouseleave).on('click' + w, y.item, m.event.item.click) }, intent: function () { m.verbose('Binding hide intent event to document'), U && H.on('touchstart' + s, m.event.test.touch).on('touchmove' + s, m.event.test.touch), H.on('click' + s, m.event.test.hide) } }, unbind: { intent: function () { m.verbose('Removing hide intent event from document'), U && H.off('touchstart' + s).off('touchmove' + s), H.off('click' + s) } }, filter: function (e) { var t = e !== _ ? e : m.get.query(); var n = function () { m.is.multiple() && m.filterActive(), (e || !e && m.get.activeItem().length == 0) && m.select.firstUnfiltered(), m.has.allResultsFiltered() ? h.onNoResults.call(M, t) ? h.allowAdditions ? h.hideAdditions && (m.verbose('User addition with no menu, setting empty style'), m.set.empty(), m.hideMenu()) : (m.verbose('All items filtered, showing message', t), m.add.message(c.noResults)) : (m.verbose('All items filtered, hiding dropdown', t), m.hideMenu()) : (m.remove.empty(), m.remove.message()), h.allowAdditions && m.add.userSuggestion(e), m.is.searchSelection() && m.can.show() && m.is.focusedOnSearch() && m.show() }; h.useLabels && m.has.maxSelections() || (h.apiSettings ? m.can.useAPI() ? m.queryRemote(t, function () { h.filterRemoteData && m.filterItems(t), n() }) : m.error(f.noAPI) : (m.filterItems(t), n())) }, queryRemote: function (e, n) { var t = { errorDuration: !1, cache: 'local', throttle: h.throttle, urlData: { query: e }, onError: function () { m.add.message(c.serverError), n() }, onFailure: function () { m.add.message(c.serverError), n() }, onSuccess: function (e) { var t = e[l.remoteValues]; $.isArray(t) && t.length > 0 ? (m.remove.message(), m.setup.menu({ values: e[l.remoteValues] })) : m.add.message(c.noResults), n() } }; C.api('get request') || m.setup.api(), t = $.extend(!0, {}, t, h.apiSettings), C.api('setting', t).api('query') }, filterItems: function (e) { var i = e !== _ ? e : m.get.query(); var s = null; var t = m.escape.string(i); var a = new RegExp('^' + t, 'igm'); m.has.query() && (s = [], m.verbose('Searching for matching values', i), F.each(function () { var e; var t; var n = $(this); if (h.match == 'both' || h.match == 'text') { if ((e = String(m.get.choiceText(n, !1))).search(a) !== -1) return s.push(this), !0; if (h.fullTextSearch === 'exact' && m.exactSearch(i, e)) return s.push(this), !0; if (!0 === h.fullTextSearch && m.fuzzySearch(i, e)) return s.push(this), !0 } if (h.match == 'both' || h.match == 'value') { if ((t = String(m.get.choiceValue(n, e))).search(a) !== -1) return s.push(this), !0; if (h.fullTextSearch === 'exact' && m.exactSearch(i, t)) return s.push(this), !0; if (!0 === h.fullTextSearch && m.fuzzySearch(i, t)) return s.push(this), !0 } })), m.debug('Showing only matched items', i), m.remove.filteredItem(), s && F.not(s).addClass(g.filtered) }, fuzzySearch: function (e, t) { var n = t.length; var i = e.length; if (e = e.toLowerCase(), t = t.toLowerCase(), n < i) return !1; if (i === n) return e === t; e:for (var s = 0, a = 0; s < i; s++) { for (var o = e.charCodeAt(s); a < n;) if (t.charCodeAt(a++) === o) continue e; return !1 } return !0 }, exactSearch: function (e, t) { return e = e.toLowerCase(), (t = t.toLowerCase()).indexOf(e) > -1 }, filterActive: function () { h.useLabels && F.filter('.' + g.active).addClass(g.filtered) }, focusSearch: function (e) { m.has.search() && !m.is.focusedOnSearch() && (e ? (C.off('focus' + w, y.search), T.focus(), C.on('focus' + w, y.search, m.event.search.focus)) : T.focus()) }, forceSelection: function () { var e = F.not(g.filtered).filter('.' + g.selected).eq(0); var t = F.not(g.filtered).filter('.' + g.active).eq(0); var n = e.length > 0 ? e : t; if (n.length > 0 && !m.is.multiple()) return m.debug('Forcing partial selection to selected item', n), void m.event.item.click.call(n, {}, !0); h.allowAdditions && m.set.selected(m.get.query()), m.remove.searchTerm() }, change: { values: function (e) { h.allowAdditions || m.clear(), m.debug('Creating dropdown with specified values', e), m.setup.menu({ values: e }), $.each(e, function (e, t) { if (t.selected == 1) return m.debug('Setting initial selection to', t.value), m.set.selected(t.value), !0 }) } }, event: { change: function () { E || (m.debug('Input changed, updating selection'), m.set.selected()) }, focus: function () { h.showOnFocus && !O && m.is.hidden() && !t && m.show() }, blur: function (e) { t = G.activeElement === this, O || t || (m.remove.activeLabel(), m.hide()) }, mousedown: function () { m.is.searchSelection() ? i = !0 : O = !0 }, mouseup: function () { m.is.searchSelection() ? i = !1 : O = !1 }, click: function (e) { $(e.target).is(C) && (m.is.focusedOnSearch() ? m.show() : m.focusSearch()) }, search: { focus: function () { O = !0, m.is.multiple() && m.remove.activeLabel(), h.showOnFocus && m.search() }, blur: function (e) { t = G.activeElement === this, m.is.searchSelection() && !i && (I || t || (h.forceSelection && m.forceSelection(), m.hide())), i = !1 } }, icon: { click: function (e) { D.hasClass(g.clear) ? m.clear() : m.can.click() && m.toggle() } }, text: { focus: function (e) { O = !0, m.focusSearch() } }, input: function (e) { (m.is.multiple() || m.is.searchSelection()) && m.set.filtered(), clearTimeout(m.timer), m.timer = setTimeout(m.search, h.delay.search) }, label: { click: function (e) { var t = $(this); var n = C.find(y.label); var i = n.filter('.' + g.active); var s = t.nextAll('.' + g.active); var a = t.prevAll('.' + g.active); var o = s.length > 0 ? t.nextUntil(s).add(i).add(t) : t.prevUntil(a).add(i).add(t); e.shiftKey ? (i.removeClass(g.active), o.addClass(g.active)) : e.ctrlKey ? t.toggleClass(g.active) : (i.removeClass(g.active), t.addClass(g.active)), h.onLabelSelect.apply(this, n.filter('.' + g.active)) } }, remove: { click: function () { var e = $(this).parent(); e.hasClass(g.active) ? m.remove.activeLabels() : m.remove.activeLabels(e) } }, test: { toggle: function (e) { var t = m.is.multiple() ? m.show : m.toggle; m.is.bubbledLabelClick(e) || m.is.bubbledIconClick(e) || m.determine.eventOnElement(e, t) && e.preventDefault() }, touch: function (e) { m.determine.eventOnElement(e, function () { e.type == 'touchstart' ? m.timer = setTimeout(function () { m.hide() }, h.delay.touch) : e.type == 'touchmove' && clearTimeout(m.timer) }), e.stopPropagation() }, hide: function (e) { m.determine.eventInModule(e, m.hide) } }, select: { mutation: function (e) { m.debug('<select> modified, recreating menu'); var n = !1; $.each(e, function (e, t) { if ($(t.target).is('select') || $(t.addedNodes).is('select')) return n = !0 }), n && (m.disconnect.selectObserver(), m.refresh(), m.setup.select(), m.set.selected(), m.observe.select()) } }, menu: { mutation: function (e) { var t = e[0]; var n = t.addedNodes ? $(t.addedNodes[0]) : $(!1); var i = t.removedNodes ? $(t.removedNodes[0]) : $(!1); var s = n.add(i); var a = s.is(y.addition) || s.closest(y.addition).length > 0; var o = s.is(y.message) || s.closest(y.message).length > 0; a || o ? (m.debug('Updating item selector cache'), m.refreshItems()) : (m.debug('Menu modified, updating selector cache'), m.refresh()) }, mousedown: function () { I = !0 }, mouseup: function () { I = !1 } }, item: { mouseenter: function (e) { var t = $(e.target); var n = $(this); var i = n.children(y.menu); var s = n.siblings(y.item).children(y.menu); var a = i.length > 0; !(i.find(t).length > 0) && a && (clearTimeout(m.itemTimer), m.itemTimer = setTimeout(function () { m.verbose('Showing sub-menu', i), $.each(s, function () { m.animate.hide(!1, $(this)) }), m.animate.show(!1, i) }, h.delay.show), e.preventDefault()) }, mouseleave: function (e) { var t = $(this).children(y.menu); t.length > 0 && (clearTimeout(m.itemTimer), m.itemTimer = setTimeout(function () { m.verbose('Hiding sub-menu', t), m.animate.hide(!1, t) }, h.delay.hide)) }, click: function (e, t) { var n = $(this); var i = $(e ? e.target : ''); var s = n.find(y.menu); var a = m.get.choiceText(n); var o = m.get.choiceValue(n, a); var r = s.length > 0; var l = s.find(i).length > 0; m.has.menuSearch() && $(G.activeElement).blur(), l || r && !h.allowCategorySelection || (m.is.searchSelection() && (h.allowAdditions && m.remove.userAddition(), m.remove.searchTerm(), m.is.focusedOnSearch() || t == 1 || m.focusSearch(!0)), h.useLabels || (m.remove.filteredItem(), m.set.scrollPosition(n)), m.determine.selectAction.call(this, a, o)) } }, document: { keydown: function (e) { var t = e.which; if (m.is.inObject(t, p)) { var n = C.find(y.label); var i = n.filter('.' + g.active); var s = (i.data(b.value), n.index(i)); var a = n.length; var o = i.length > 0; var r = i.length > 1; var l = s === 0; var c = s + 1 == a; var u = m.is.searchSelection(); var d = m.is.focusedOnSearch(); var f = m.is.focused(); var v = d && m.get.caretPosition() === 0; if (u && !o && !d) return; t == p.leftArrow ? !f && !v || o ? o && (e.shiftKey ? m.verbose('Adding previous label to selection') : (m.verbose('Selecting previous label'), n.removeClass(g.active)), l && !r ? i.addClass(g.active) : i.prev(y.siblingLabel).addClass(g.active).end(), e.preventDefault()) : (m.verbose('Selecting previous label'), n.last().addClass(g.active)) : t == p.rightArrow ? (f && !o && n.first().addClass(g.active), o && (e.shiftKey ? m.verbose('Adding next label to selection') : (m.verbose('Selecting next label'), n.removeClass(g.active)), c ? u ? d ? n.removeClass(g.active) : m.focusSearch() : r ? i.next(y.siblingLabel).addClass(g.active) : i.addClass(g.active) : i.next(y.siblingLabel).addClass(g.active), e.preventDefault())) : t == p.deleteKey || t == p.backspace ? o ? (m.verbose('Removing active labels'), c && u && !d && m.focusSearch(), i.last().next(y.siblingLabel).addClass(g.active), m.remove.activeLabels(i), e.preventDefault()) : v && !o && t == p.backspace && (m.verbose('Removing last label on input backspace'), i = n.last().addClass(g.active), m.remove.activeLabels(i)) : i.removeClass(g.active) } } }, keydown: function (e) { var t = e.which; if (m.is.inObject(t, p)) { var n; var i = F.not(y.unselectable).filter('.' + g.selected).eq(0); var s = q.children('.' + g.active).eq(0); var a = i.length > 0 ? i : s; var o = a.length > 0 ? a.siblings(':not(.' + g.filtered + ')').addBack() : q.children(':not(.' + g.filtered + ')'); var r = a.children(y.menu); var l = a.closest(y.menu); var c = l.hasClass(g.visible) || l.hasClass(g.animating) || l.parent(y.menu).length > 0; var u = r.length > 0; var d = a.length > 0; var f = a.not(y.unselectable).length > 0; var v = t == p.delimiter && h.allowAdditions && m.is.multiple(); if (h.allowAdditions && h.hideAdditions && (t == p.enter || v) && f && (m.verbose('Selecting item from keyboard shortcut', a), m.event.item.click.call(a, e), m.is.searchSelection() && m.remove.searchTerm()), m.is.visible()) { if ((t == p.enter || v) && (t == p.enter && d && u && !h.allowCategorySelection ? (m.verbose('Pressed enter on unselectable category, opening sub menu'), t = p.rightArrow) : f && (m.verbose('Selecting item from keyboard shortcut', a), m.event.item.click.call(a, e), m.is.searchSelection() && m.remove.searchTerm()), e.preventDefault()), d && (t == p.leftArrow && l[0] !== q[0] && (m.verbose('Left key pressed, closing sub-menu'), m.animate.hide(!1, l), a.removeClass(g.selected), l.closest(y.item).addClass(g.selected), e.preventDefault()), t == p.rightArrow && u && (m.verbose('Right key pressed, opening sub-menu'), m.animate.show(!1, r), a.removeClass(g.selected), r.find(y.item).eq(0).addClass(g.selected), e.preventDefault())), t == p.upArrow) { if (n = d && c ? a.prevAll(y.item + ':not(' + y.unselectable + ')').eq(0) : F.eq(0), o.index(n) < 0) return m.verbose('Up key pressed but reached top of current menu'), void e.preventDefault(); m.verbose('Up key pressed, changing active item'), a.removeClass(g.selected), n.addClass(g.selected), m.set.scrollPosition(n), h.selectOnKeydown && m.is.single() && m.set.selectedItem(n), e.preventDefault() } if (t == p.downArrow) { if ((n = d && c ? n = a.nextAll(y.item + ':not(' + y.unselectable + ')').eq(0) : F.eq(0)).length === 0) return m.verbose('Down key pressed but reached bottom of current menu'), void e.preventDefault(); m.verbose('Down key pressed, changing active item'), F.removeClass(g.selected), n.addClass(g.selected), m.set.scrollPosition(n), h.selectOnKeydown && m.is.single() && m.set.selectedItem(n), e.preventDefault() }t == p.pageUp && (m.scrollPage('up'), e.preventDefault()), t == p.pageDown && (m.scrollPage('down'), e.preventDefault()), t == p.escape && (m.verbose('Escape key pressed, closing dropdown'), m.hide()) } else v && e.preventDefault(), t != p.downArrow || m.is.visible() || (m.verbose('Down key pressed, showing dropdown'), m.show(), e.preventDefault()) } else m.has.search() || m.set.selectedLetter(String.fromCharCode(t)) } }, trigger: { change: function () { var e = G.createEvent('HTMLEvents'); var t = R[0]; t && (m.verbose('Triggering native change event'), e.initEvent('change', !0, !1), t.dispatchEvent(e)) } }, determine: { selectAction: function (e, t) { m.verbose('Determining action', h.action), $.isFunction(m.action[h.action]) ? (m.verbose('Triggering preset action', h.action, e, t), m.action[h.action].call(M, e, t, this)) : $.isFunction(h.action) ? (m.verbose('Triggering user action', h.action, e, t), h.action.call(M, e, t, this)) : m.error(f.action, h.action) }, eventInModule: function (e, t) { var n = $(e.target); var i = n.closest(G.documentElement).length > 0; var s = n.closest(C).length > 0; return t = $.isFunction(t) ? t : function () {}, i && !s ? (m.verbose('Triggering event', t), t(), !0) : (m.verbose('Event occurred in dropdown, canceling callback'), !1) }, eventOnElement: function (e, t) { var n = $(e.target); var i = n.closest(y.siblingLabel); var s = G.body.contains(e.target); var a = C.find(i).length === 0; var o = n.closest(q).length === 0; return t = $.isFunction(t) ? t : function () {}, s && a && o ? (m.verbose('Triggering event', t), t(), !0) : (m.verbose('Event occurred in dropdown menu, canceling callback'), !1) } }, action: { nothing: function () {}, activate: function (e, t, n) { if (t = t !== _ ? t : e, m.can.activate($(n))) { if (m.set.selected(t, $(n)), m.is.multiple() && !m.is.allFiltered()) return; m.hideAndClear() } }, select: function (e, t, n) { if (t = t !== _ ? t : e, m.can.activate($(n))) { if (m.set.value(t, e, $(n)), m.is.multiple() && !m.is.allFiltered()) return; m.hideAndClear() } }, combo: function (e, t, n) { t = t !== _ ? t : e, m.set.selected(t, $(n)), m.hideAndClear() }, hide: function (e, t, n) { m.set.value(t, e, $(n)), m.hideAndClear() } }, get: { id: function () { return a }, defaultText: function () { return C.data(b.defaultText) }, defaultValue: function () { return C.data(b.defaultValue) }, placeholderText: function () { return h.placeholder != 'auto' && typeof h.placeholder === 'string' ? h.placeholder : C.data(b.placeholderText) || '' }, text: function () { return A.text() }, query: function () { return $.trim(T.val()) }, searchWidth: function (e) { return e = e !== _ ? e : T.val(), k.text(e), Math.ceil(k.width() + 1) }, selectionCount: function () { var e = m.get.values(); return m.is.multiple() ? $.isArray(e) ? e.length : 0 : m.get.value() !== '' ? 1 : 0 }, transition: function (e) { return h.transition == 'auto' ? m.is.upward(e) ? 'slide up' : 'slide down' : h.transition }, userValues: function () { var e = m.get.values(); return !!e && (e = $.isArray(e) ? e : [e], $.grep(e, function (e) { return !1 === m.get.item(e) })) }, uniqueArray: function (n) { return $.grep(n, function (e, t) { return $.inArray(e, n) === t }) }, caretPosition: function () { var e; var t; var n = T.get(0); return 'selectionStart' in n ? n.selectionStart : G.selection ? (n.focus(), t = (e = G.selection.createRange()).text.length, e.moveStart('character', -n.value.length), e.text.length - t) : void 0 }, value: function () { var e = R.length > 0 ? R.val() : C.data(b.value); var t = $.isArray(e) && e.length === 1 && e[0] === ''; return e === _ || t ? '' : e }, values: function () { var e = m.get.value(); return e === '' ? '' : !m.has.selectInput() && m.is.multiple() ? typeof e === 'string' ? e.split(h.delimiter) : '' : e }, remoteValues: function () { var e = m.get.values(); var i = !1; return e && (typeof e === 'string' && (e = [e]), $.each(e, function (e, t) { var n = m.read.remoteData(t); m.verbose('Restoring value from session data', n, t), n && (i || (i = {}), i[t] = n) })), i }, choiceText: function (e, t) { if (t = t !== _ ? t : h.preserveHTML, e) return e.find(y.menu).length > 0 && (m.verbose('Retrieving text of element with sub-menu'), (e = e.clone()).find(y.menu).remove(), e.find(y.menuIcon).remove()), e.data(b.text) !== _ ? e.data(b.text) : t ? $.trim(e.html()) : $.trim(e.text()) }, choiceValue: function (e, t) { return t = t || m.get.choiceText(e), !!e && (e.data(b.value) !== _ ? String(e.data(b.value)) : typeof t === 'string' ? $.trim(t.toLowerCase()) : String(t)) }, inputEvent: function () { var e = T[0]; return !!e && (e.oninput !== _ ? 'input' : e.onpropertychange !== _ ? 'propertychange' : 'keyup') }, selectValues: function () { var s = { values: [] }; return C.find('option').each(function () { var e = $(this); var t = e.html(); var n = e.attr('disabled'); var i = e.attr('value') !== _ ? e.attr('value') : t; h.placeholder === 'auto' && i === '' ? s.placeholder = t : s.values.push({ name: t, value: i, disabled: n }) }), h.placeholder && h.placeholder !== 'auto' && (m.debug('Setting placeholder value to', h.placeholder), s.placeholder = h.placeholder), h.sortSelect ? (s.values.sort(function (e, t) { return e.name > t.name ? 1 : -1 }), m.debug('Retrieved and sorted values from select', s)) : m.debug('Retrieved values from select', s), s }, activeItem: function () { return F.filter('.' + g.active) }, selectedItem: function () { var e = F.not(y.unselectable).filter('.' + g.selected); return e.length > 0 ? e : F.eq(0) }, itemWithAdditions: function (e) { var t = m.get.item(e); var n = m.create.userChoice(e); return n && n.length > 0 && (t = t.length > 0 ? t.add(n) : n), t }, item: function (i, s) { var e; var a; var o = !1; return i = i !== _ ? i : m.get.values() !== _ ? m.get.values() : m.get.text(), e = a ? i.length > 0 : i !== _ && i !== null, a = m.is.multiple() && $.isArray(i), s = i === '' || i === 0 || (s || !1), e && F.each(function () { var e = $(this); var t = m.get.choiceText(e); var n = m.get.choiceValue(e, t); if (n !== null && n !== _) if (a)$.inArray(String(n), i) === -1 && $.inArray(t, i) === -1 || (o = o ? o.add(e) : e); else if (s) { if (m.verbose('Ambiguous dropdown value using strict type check', e, i), n === i || t === i) return o = e, !0 } else if (String(n) == String(i) || t == i) return m.verbose('Found select item by value', n, i), o = e, !0 }), o } }, check: { maxSelections: function (e) { return !h.maxSelections || ((e = e !== _ ? e : m.get.selectionCount()) >= h.maxSelections ? (m.debug('Maximum selection count reached'), h.useLabels && (F.addClass(g.filtered), m.add.message(c.maxSelections)), !0) : (m.verbose('No longer at maximum selection count'), m.remove.message(), m.remove.filteredItem(), m.is.searchSelection() && m.filterItems(), !1)) } }, restore: { defaults: function () { m.clear(), m.restore.defaultText(), m.restore.defaultValue() }, defaultText: function () { var e = m.get.defaultText(); e === m.get.placeholderText ? (m.debug('Restoring default placeholder text', e), m.set.placeholderText(e)) : (m.debug('Restoring default text', e), m.set.text(e)) }, placeholderText: function () { m.set.placeholderText() }, defaultValue: function () { var e = m.get.defaultValue(); e !== _ && (m.debug('Restoring default value', e), e !== '' ? (m.set.value(e), m.set.selected()) : (m.remove.activeItem(), m.remove.selectedItem())) }, labels: function () { h.allowAdditions && (h.useLabels || (m.error(f.labels), h.useLabels = !0), m.debug('Restoring selected values'), m.create.userLabels()), m.check.maxSelections() }, selected: function () { m.restore.values(), m.is.multiple() ? (m.debug('Restoring previously selected values and labels'), m.restore.labels()) : m.debug('Restoring previously selected values') }, values: function () { m.set.initialLoad(), h.apiSettings && h.saveRemoteData && m.get.remoteValues() ? m.restore.remoteValues() : m.set.selected(), m.remove.initialLoad() }, remoteValues: function () { var e = m.get.remoteValues(); m.debug('Recreating selected from session data', e), e && (m.is.single() ? $.each(e, function (e, t) { m.set.text(t) }) : $.each(e, function (e, t) { m.add.label(e, t) })) } }, read: { remoteData: function (e) { var t; if (Y.Storage !== _) return (t = sessionStorage.getItem(e)) !== _ && t; m.error(f.noStorage) } }, save: { defaults: function () { m.save.defaultText(), m.save.placeholderText(), m.save.defaultValue() }, defaultValue: function () { var e = m.get.value(); m.verbose('Saving default value as', e), C.data(b.defaultValue, e) }, defaultText: function () { var e = m.get.text(); m.verbose('Saving default text as', e), C.data(b.defaultText, e) }, placeholderText: function () { var e; !1 !== h.placeholder && A.hasClass(g.placeholder) && (e = m.get.text(), m.verbose('Saving placeholder text as', e), C.data(b.placeholderText, e)) }, remoteData: function (e, t) { Y.Storage !== _ ? (m.verbose('Saving remote data to session storage', t, e), sessionStorage.setItem(t, e)) : m.error(f.noStorage) } }, clear: function () { m.is.multiple() && h.useLabels ? m.remove.labels() : (m.remove.activeItem(), m.remove.selectedItem()), m.set.placeholderText(), m.clearValue() }, clearValue: function () { m.set.value('') }, scrollPage: function (e, t) { var n; var i; var s = t || m.get.selectedItem(); var a = s.closest(y.menu); var o = a.outerHeight(); var r = a.scrollTop(); var l = F.eq(0).outerHeight(); var c = Math.floor(o / l); var u = (a.prop('scrollHeight'), e == 'up' ? r - l * c : r + l * c); var d = F.not(y.unselectable); i = e == 'up' ? d.index(s) - c : d.index(s) + c, (n = (e == 'up' ? i >= 0 : i < d.length) ? d.eq(i) : e == 'up' ? d.first() : d.last()).length > 0 && (m.debug('Scrolling page', e, n), s.removeClass(g.selected), n.addClass(g.selected), h.selectOnKeydown && m.is.single() && m.set.selectedItem(n), a.scrollTop(u)) }, set: { filtered: function () { var e = m.is.multiple(); var t = m.is.searchSelection(); var n = e && t; var i = t ? m.get.query() : ''; var s = typeof i === 'string' && i.length > 0; var a = m.get.searchWidth(); var o = i !== ''; e && s && (m.verbose('Adjusting input width', a, h.glyphWidth), T.css('width', a)), s || n && o ? (m.verbose('Hiding placeholder text'), A.addClass(g.filtered)) : (!e || n && !o) && (m.verbose('Showing placeholder text'), A.removeClass(g.filtered)) }, empty: function () { C.addClass(g.empty) }, loading: function () { C.addClass(g.loading) }, placeholderText: function (e) { e = e || m.get.placeholderText(), m.debug('Setting placeholder text', e), m.set.text(e), A.addClass(g.placeholder) }, tabbable: function () { m.is.searchSelection() ? (m.debug('Added tabindex to searchable dropdown'), T.val('').attr('tabindex', 0), q.attr('tabindex', -1)) : (m.debug('Added tabindex to dropdown'), C.attr('tabindex') === _ && (C.attr('tabindex', 0), q.attr('tabindex', -1))) }, initialLoad: function () { m.verbose('Setting initial load'), e = !0 }, activeItem: function (e) { h.allowAdditions && e.filter(y.addition).length > 0 ? e.addClass(g.filtered) : e.addClass(g.active) }, partialSearch: function (e) { var t = m.get.query().length; T.val(e.substr(0, t)) }, scrollPosition: function (e, t) { var n, i, s, a, o, r; n = (e = e || m.get.selectedItem()).closest(y.menu), i = e && e.length > 0, t = t !== _ && t, e && n.length > 0 && i && (e.position().top, n.addClass(g.loading), s = (a = n.scrollTop()) - n.offset().top + e.offset().top, t || (r = a + n.height() < s + 5, o = s - 5 < a), m.debug('Scrolling to active item', s), (t || o || r) && n.scrollTop(s), n.removeClass(g.loading)) }, text: function (e) { h.action !== 'select' && (h.action == 'combo' ? (m.debug('Changing combo button text', e, L), h.preserveHTML ? L.html(e) : L.text(e)) : (e !== m.get.placeholderText() && A.removeClass(g.placeholder), m.debug('Changing text', e, A), A.removeClass(g.filtered), h.preserveHTML ? A.html(e) : A.text(e))) }, selectedItem: function (e) { var t = m.get.choiceValue(e); var n = m.get.choiceText(e, !1); var i = m.get.choiceText(e, !0); m.debug('Setting user selection to item', e), m.remove.activeItem(), m.set.partialSearch(n), m.set.activeItem(e), m.set.selected(t, e), m.set.text(i) }, selectedLetter: function (e) { var t; var n = F.filter('.' + g.selected); var i = n.length > 0 && m.has.firstLetter(n, e); var s = !1; i && (t = n.nextAll(F).eq(0), m.has.firstLetter(t, e) && (s = t)), s || F.each(function () { if (m.has.firstLetter($(this), e)) return s = $(this), !1 }), s && (m.verbose('Scrolling to next value with letter', e), m.set.scrollPosition(s), n.removeClass(g.selected), s.addClass(g.selected), h.selectOnKeydown && m.is.single() && m.set.selectedItem(s)) }, direction: function (e) { h.direction == 'auto' ? (m.remove.upward(), m.can.openDownward(e) ? m.remove.upward(e) : m.set.upward(e), m.is.leftward(e) || m.can.openRightward(e) || m.set.leftward(e)) : h.direction == 'upward' && m.set.upward(e) }, upward: function (e) { (e || C).addClass(g.upward) }, leftward: function (e) { (e || q).addClass(g.leftward) }, value: function (e, t, n) { var i = m.escape.value(e); var s = R.length > 0; var a = m.get.values(); var o = e !== _ ? String(e) : e; if (s) { if (!h.allowReselection && o == a && (m.verbose('Skipping value update already same value', e, a), !m.is.initialLoad())) return; m.is.single() && m.has.selectInput() && m.can.extendSelect() && (m.debug('Adding user option', e), m.add.optionValue(e)), m.debug('Updating input value', i, a), E = !0, R.val(i), !1 === h.fireOnInit && m.is.initialLoad() ? m.debug('Input native change event ignored on initial load') : m.trigger.change(), E = !1 } else m.verbose('Storing value in metadata', i, R), i !== a && C.data(b.value, o); m.is.single() && h.clearable && (i ? m.set.clearable() : m.remove.clearable()), !1 === h.fireOnInit && m.is.initialLoad() ? m.verbose('No callback on initial load', h.onChange) : h.onChange.call(M, e, t, n) }, active: function () { C.addClass(g.active) }, multiple: function () { C.addClass(g.multiple) }, visible: function () { C.addClass(g.visible) }, exactly: function (e, t) { m.debug('Setting selected to exact values'), m.clear(), m.set.selected(e, t) }, selected: function (e, r) { var l = m.is.multiple(); (r = h.allowAdditions ? r || m.get.itemWithAdditions(e) : r || m.get.item(e)) && (m.debug('Setting selected menu item to', r), m.is.multiple() && m.remove.searchWidth(), m.is.single() ? (m.remove.activeItem(), m.remove.selectedItem()) : h.useLabels && m.remove.selectedItem(), r.each(function () { var e = $(this); var t = m.get.choiceText(e); var n = m.get.choiceValue(e, t); var i = e.hasClass(g.filtered); var s = e.hasClass(g.active); var a = e.hasClass(g.addition); var o = l && r.length == 1; l ? !s || a ? (h.apiSettings && h.saveRemoteData && m.save.remoteData(t, n), h.useLabels ? (m.add.label(n, t, o), m.add.value(n, t, e), m.set.activeItem(e), m.filterActive(), m.select.nextAvailable(r)) : (m.add.value(n, t, e), m.set.text(m.add.variables(c.count)), m.set.activeItem(e))) : i || (m.debug('Selected active value, removing label'), m.remove.selected(n)) : (h.apiSettings && h.saveRemoteData && m.save.remoteData(t, n), m.set.text(t), m.set.value(n, t, e), e.addClass(g.active).addClass(g.selected)) })) }, clearable: function () { D.addClass(g.clear) } }, add: { label: function (e, t, n) { var i; var s = m.is.searchSelection() ? T : A; var a = m.escape.value(e); h.ignoreCase && (a = a.toLowerCase()), i = $('<a />').addClass(g.label).attr('data-' + b.value, a).html(v.label(a, t)), i = h.onLabelCreate.call(i, a, t), m.has.label(e) ? m.debug('User selection already exists, skipping', a) : (h.label.variation && i.addClass(h.label.variation), !0 === n ? (m.debug('Animating in label', i), i.addClass(g.hidden).insertBefore(s).transition(h.label.transition, h.label.duration)) : (m.debug('Adding selection label', i), i.insertBefore(s))) }, message: function (e) { var t = q.children(y.message); var n = h.templates.message(m.add.variables(e)); t.length > 0 ? t.html(n) : t = $('<div/>').html(n).addClass(g.message).appendTo(q) }, optionValue: function (e) { var t = m.escape.value(e); R.find('option[value="' + m.escape.string(t) + '"]').length > 0 || (m.disconnect.selectObserver(), m.is.single() && (m.verbose('Removing previous user addition'), R.find('option.' + g.addition).remove()), $('<option/>').prop('value', t).addClass(g.addition).html(e).appendTo(R), m.verbose('Adding user addition as an <option>', e), m.observe.select()) }, userSuggestion: function (e) { var t; var n = q.children(y.addition); var i = m.get.item(e); var s = i && i.not(y.addition).length; var a = n.length > 0; h.useLabels && m.has.maxSelections() || (e === '' || s ? n.remove() : (a ? (n.data(b.value, e).data(b.text, e).attr('data-' + b.value, e).attr('data-' + b.text, e).removeClass(g.filtered), h.hideAdditions || (t = h.templates.addition(m.add.variables(c.addResult, e)), n.html(t)), m.verbose('Replacing user suggestion with new value', n)) : ((n = m.create.userChoice(e)).prependTo(q), m.verbose('Adding item choice to menu corresponding with user choice addition', n)), h.hideAdditions && !m.is.allFiltered() || n.addClass(g.selected).siblings().removeClass(g.selected), m.refreshItems())) }, variables: function (e, t) { var n; var i; var s = e.search('{count}') !== -1; var a = e.search('{maxCount}') !== -1; var o = e.search('{term}') !== -1; return m.verbose('Adding templated variables to message', e), s && (n = m.get.selectionCount(), e = e.replace('{count}', n)), a && (n = m.get.selectionCount(), e = e.replace('{maxCount}', h.maxSelections)), o && (i = t || m.get.query(), e = e.replace('{term}', i)), e }, value: function (e, t, n) { var i; var s = m.get.values(); m.has.value(e) ? m.debug('Value already selected') : e !== '' ? (i = $.isArray(s) ? (i = s.concat([e]), m.get.uniqueArray(i)) : [e], m.has.selectInput() ? m.can.extendSelect() && (m.debug('Adding value to select', e, i, R), m.add.optionValue(e)) : (i = i.join(h.delimiter), m.debug('Setting hidden input to delimited value', i, R)), !1 === h.fireOnInit && m.is.initialLoad() ? m.verbose('Skipping onadd callback on initial load', h.onAdd) : h.onAdd.call(M, e, t, n), m.set.value(i, e, t, n), m.check.maxSelections()) : m.debug('Cannot select blank values from multiselect') } }, remove: { active: function () { C.removeClass(g.active) }, activeLabel: function () { C.find(y.label).removeClass(g.active) }, empty: function () { C.removeClass(g.empty) }, loading: function () { C.removeClass(g.loading) }, initialLoad: function () { e = !1 }, upward: function (e) { (e || C).removeClass(g.upward) }, leftward: function (e) { (e || q).removeClass(g.leftward) }, visible: function () { C.removeClass(g.visible) }, activeItem: function () { F.removeClass(g.active) }, filteredItem: function () { h.useLabels && m.has.maxSelections() || (h.useLabels && m.is.multiple() ? F.not('.' + g.active).removeClass(g.filtered) : F.removeClass(g.filtered), m.remove.empty()) }, optionValue: function (e) { var t = m.escape.value(e); var n = R.find('option[value="' + m.escape.string(t) + '"]'); n.length > 0 && n.hasClass(g.addition) && (o && (o.disconnect(), m.verbose('Temporarily disconnecting mutation observer')), n.remove(), m.verbose('Removing user addition as an <option>', t), o && o.observe(R[0], { childList: !0, subtree: !0 })) }, message: function () { q.children(y.message).remove() }, searchWidth: function () { T.css('width', '') }, searchTerm: function () { m.verbose('Cleared search term'), T.val(''), m.set.filtered() }, userAddition: function () { F.filter(y.addition).remove() }, selected: function (e, t) { if (!(t = h.allowAdditions ? t || m.get.itemWithAdditions(e) : t || m.get.item(e))) return !1; t.each(function () { var e = $(this); var t = m.get.choiceText(e); var n = m.get.choiceValue(e, t); m.is.multiple() ? h.useLabels ? (m.remove.value(n, t, e), m.remove.label(n)) : (m.remove.value(n, t, e), m.get.selectionCount() === 0 ? m.set.placeholderText() : m.set.text(m.add.variables(c.count))) : m.remove.value(n, t, e), e.removeClass(g.filtered).removeClass(g.active), h.useLabels && e.removeClass(g.selected) }) }, selectedItem: function () { F.removeClass(g.selected) }, value: function (e, t, n) { var i; var s = m.get.values(); m.has.selectInput() ? (m.verbose('Input is <select> removing selected option', e), i = m.remove.arrayValue(e, s), m.remove.optionValue(e)) : (m.verbose('Removing from delimited values', e), i = (i = m.remove.arrayValue(e, s)).join(h.delimiter)), !1 === h.fireOnInit && m.is.initialLoad() ? m.verbose('No callback on initial load', h.onRemove) : h.onRemove.call(M, e, t, n), m.set.value(i, t, n), m.check.maxSelections() }, arrayValue: function (t, e) { return $.isArray(e) || (e = [e]), e = $.grep(e, function (e) { return t != e }), m.verbose('Removed value from delimited string', t, e), e }, label: function (e, t) { var n = C.find(y.label).filter('[data-' + b.value + '="' + m.escape.string(e) + '"]'); m.verbose('Removing label', n), n.remove() }, activeLabels: function (e) { e = e || C.find(y.label).filter('.' + g.active), m.verbose('Removing active label selections', e), m.remove.labels(e) }, labels: function (e) { e = e || C.find(y.label), m.verbose('Removing labels', e), e.each(function () { var e = $(this); var t = e.data(b.value); var n = t !== _ ? String(t) : t; var i = m.is.userValue(n); !1 !== h.onLabelRemove.call(e, t) ? (m.remove.message(), i ? (m.remove.value(n), m.remove.label(n)) : m.remove.selected(n)) : m.debug('Label remove callback cancelled removal') }) }, tabbable: function () { m.is.searchSelection() ? (m.debug('Searchable dropdown initialized'), T.removeAttr('tabindex')) : (m.debug('Simple selection dropdown initialized'), C.removeAttr('tabindex')), q.removeAttr('tabindex') }, clearable: function () { D.removeClass(g.clear) } }, has: { menuSearch: function () { return m.has.search() && T.closest(q).length > 0 }, search: function () { return T.length > 0 }, sizer: function () { return k.length > 0 }, selectInput: function () { return R.is('select') }, minCharacters: function (e) { return !h.minCharacters || (e = e !== _ ? String(e) : String(m.get.query())).length >= h.minCharacters }, firstLetter: function (e, t) { var n; return !(!e || e.length === 0 || typeof t !== 'string') && (n = m.get.choiceText(e, !1), (t = t.toLowerCase()) == String(n).charAt(0).toLowerCase()) }, input: function () { return R.length > 0 }, items: function () { return F.length > 0 }, menu: function () { return q.length > 0 }, message: function () { return q.children(y.message).length !== 0 }, label: function (e) { var t = m.escape.value(e); var n = C.find(y.label); return h.ignoreCase && (t = t.toLowerCase()), n.filter('[data-' + b.value + '="' + m.escape.string(t) + '"]').length > 0 }, maxSelections: function () { return h.maxSelections && m.get.selectionCount() >= h.maxSelections }, allResultsFiltered: function () { var e = F.not(y.addition); return e.filter(y.unselectable).length === e.length }, userSuggestion: function () { return q.children(y.addition).length > 0 }, query: function () { return m.get.query() !== '' }, value: function (e) { return h.ignoreCase ? m.has.valueIgnoringCase(e) : m.has.valueMatchingCase(e) }, valueMatchingCase: function (e) { var t = m.get.values(); return !!($.isArray(t) ? t && $.inArray(e, t) !== -1 : t == e) }, valueIgnoringCase: function (n) { var e = m.get.values(); var i = !1; return $.isArray(e) || (e = [e]), $.each(e, function (e, t) { if (String(n).toLowerCase() == String(t).toLowerCase()) return !(i = !0) }), i } }, is: { active: function () { return C.hasClass(g.active) }, animatingInward: function () { return q.transition('is inward') }, animatingOutward: function () { return q.transition('is outward') }, bubbledLabelClick: function (e) { return $(e.target).is('select, input') && C.closest('label').length > 0 }, bubbledIconClick: function (e) { return $(e.target).closest(D).length > 0 }, alreadySetup: function () { return C.is('select') && C.parent(y.dropdown).data(x) !== _ && C.prev().length === 0 }, animating: function (e) { return e ? e.transition && e.transition('is animating') : q.transition && q.transition('is animating') }, leftward: function (e) { return (e || q).hasClass(g.leftward) }, disabled: function () { return C.hasClass(g.disabled) }, focused: function () { return G.activeElement === C[0] }, focusedOnSearch: function () { return G.activeElement === T[0] }, allFiltered: function () { return (m.is.multiple() || m.has.search()) && !(h.hideAdditions == 0 && m.has.userSuggestion()) && !m.has.message() && m.has.allResultsFiltered() }, hidden: function (e) { return !m.is.visible(e) }, initialLoad: function () { return e }, inObject: function (n, e) { var i = !1; return $.each(e, function (e, t) { if (t == n) return i = !0 }), i }, multiple: function () { return C.hasClass(g.multiple) }, remote: function () { return h.apiSettings && m.can.useAPI() }, single: function () { return !m.is.multiple() }, selectMutation: function (e) { var n = !1; return $.each(e, function (e, t) { if (t.target && $(t.target).is('select')) return n = !0 }), n }, search: function () { return C.hasClass(g.search) }, searchSelection: function () { return m.has.search() && T.parent(y.dropdown).length === 1 }, selection: function () { return C.hasClass(g.selection) }, userValue: function (e) { return $.inArray(e, m.get.userValues()) !== -1 }, upward: function (e) { return (e || C).hasClass(g.upward) }, visible: function (e) { return e ? e.hasClass(g.visible) : q.hasClass(g.visible) }, verticallyScrollableContext: function () { var e = S.get(0) !== Y && S.css('overflow-y'); return e == 'auto' || e == 'scroll' }, horizontallyScrollableContext: function () { var e = S.get(0) !== Y && S.css('overflow-X'); return e == 'auto' || e == 'scroll' } }, can: { activate: function (e) { return !!h.useLabels || (!m.has.maxSelections() || !(!m.has.maxSelections() || !e.hasClass(g.active))) }, openDownward: function (e) { var t; var n; var i = e || q; var s = !0; return i.addClass(g.loading), n = { context: { offset: S.get(0) === Y ? { top: 0, left: 0 } : S.offset(), scrollTop: S.scrollTop(), height: S.outerHeight() }, menu: { offset: i.offset(), height: i.outerHeight() } }, m.is.verticallyScrollableContext() && (n.menu.offset.top += n.context.scrollTop), s = (t = { above: n.context.scrollTop <= n.menu.offset.top - n.context.offset.top - n.menu.height, below: n.context.scrollTop + n.context.height >= n.menu.offset.top - n.context.offset.top + n.menu.height }).below ? (m.verbose('Dropdown can fit in context downward', t), !0) : t.below || t.above ? (m.verbose('Dropdown cannot fit below, opening upward', t), !1) : (m.verbose('Dropdown cannot fit in either direction, favoring downward', t), !0), i.removeClass(g.loading), s }, openRightward: function (e) { var t; var n; var i = e || q; var s = !0; return i.addClass(g.loading), n = { context: { offset: S.get(0) === Y ? { top: 0, left: 0 } : S.offset(), scrollLeft: S.scrollLeft(), width: S.outerWidth() }, menu: { offset: i.offset(), width: i.outerWidth() } }, m.is.horizontallyScrollableContext() && (n.menu.offset.left += n.context.scrollLeft), (t = n.menu.offset.left - n.context.offset.left + n.menu.width >= n.context.scrollLeft + n.context.width) && (m.verbose('Dropdown cannot fit in context rightward', t), s = !1), i.removeClass(g.loading), s }, click: function () { return U || h.on == 'click' }, extendSelect: function () { return h.allowAdditions || h.apiSettings }, show: function () { return !m.is.disabled() && (m.has.items() || m.has.message()) }, useAPI: function () { return $.fn.api !== _ } }, animate: { show: function (e, t) { var n; var i = t || q; var s = t ? function () {} : function () { m.hideSubMenus(), m.hideOthers(), m.set.active() }; e = $.isFunction(e) ? e : function () {}, m.verbose('Doing menu show animation', i), m.set.direction(t), n = m.get.transition(t), m.is.selection() && m.set.scrollPosition(m.get.selectedItem(), !0), (m.is.hidden(i) || m.is.animating(i)) && (n == 'none' ? (s(), i.transition('show'), e.call(M)) : $.fn.transition !== _ && C.transition('is supported') ? i.transition({ animation: n + ' in', debug: h.debug, verbose: h.verbose, duration: h.duration, queue: !0, onStart: s, onComplete: function () { e.call(M) } }) : m.error(f.noTransition, n)) }, hide: function (e, t) { var n = t || q; var i = (t ? h.duration : h.duration, t ? function () {} : function () { m.can.click() && m.unbind.intent(), m.remove.active() }); var s = m.get.transition(t); e = $.isFunction(e) ? e : function () {}, (m.is.visible(n) || m.is.animating(n)) && (m.verbose('Doing menu hide animation', n), s == 'none' ? (i(), n.transition('hide'), e.call(M)) : $.fn.transition !== _ && C.transition('is supported') ? n.transition({ animation: s + ' out', duration: h.duration, debug: h.debug, verbose: h.verbose, queue: !1, onStart: i, onComplete: function () { e.call(M) } }) : m.error(f.transition)) } }, hideAndClear: function () { m.remove.searchTerm(), m.has.maxSelections() || (m.has.search() ? m.hide(function () { m.remove.filteredItem() }) : m.hide()) }, delay: { show: function () { m.verbose('Delaying show event to ensure user intent'), clearTimeout(m.timer), m.timer = setTimeout(m.show, h.delay.show) }, hide: function () { m.verbose('Delaying hide event to ensure user intent'), clearTimeout(m.timer), m.timer = setTimeout(m.hide, h.delay.hide) } }, escape: { value: function (e) { var t = $.isArray(e); var n = typeof e === 'string'; var i = !n && !t; var s = n && e.search(d.quote) !== -1; var a = []; return i || !s ? e : (m.debug('Encoding quote values for use in select', e), t ? ($.each(e, function (e, t) { a.push(t.replace(d.quote, '&quot;')) }), a) : e.replace(d.quote, '&quot;')) }, string: function (e) { return (e = String(e)).replace(d.escape, '\\$&') } }, setting: function (e, t) { if (m.debug('Changing setting', e, t), $.isPlainObject(e))$.extend(!0, h, e); else { if (t === _) return h[e]; $.isPlainObject(h[e]) ? $.extend(!0, h[e], t) : h[e] = t } }, internal: function (e, t) { if ($.isPlainObject(e))$.extend(!0, m, e); else { if (t === _) return m[e]; m[e] = t } }, debug: function () { !h.silent && h.debug && (h.performance ? m.performance.log(arguments) : (m.debug = Function.prototype.bind.call(console.info, console, h.name + ':'), m.debug.apply(console, arguments))) }, verbose: function () { !h.silent && h.verbose && h.debug && (h.performance ? m.performance.log(arguments) : (m.verbose = Function.prototype.bind.call(console.info, console, h.name + ':'), m.verbose.apply(console, arguments))) }, error: function () { h.silent || (m.error = Function.prototype.bind.call(console.error, console, h.name + ':'), m.error.apply(console, arguments)) }, performance: { log: function (e) { var t, n; h.performance && (n = (t = (new Date()).getTime()) - (B || t), B = t, W.push({ Name: e[0], Arguments: [].slice.call(e, 1) || '', Element: M, 'Execution Time': n })), clearTimeout(m.performance.timer), m.performance.timer = setTimeout(m.performance.display, 500) }, display: function () { var e = h.name + ':'; var n = 0; B = !1, clearTimeout(m.performance.timer), $.each(W, function (e, t) { n += t['Execution Time'] }), e += ' ' + n + 'ms', N && (e += " '" + N + "'"), (console.group !== _ || console.table !== _) && W.length > 0 && (console.groupCollapsed(e), console.table ? console.table(W) : $.each(W, function (e, t) { console.log(t.Name + ': ' + t['Execution Time'] + 'ms') }), console.groupEnd()), W = [] } }, invoke: function (i, e, t) { var s; var a; var n; var o = j; return e = e || X, t = M || t, typeof i === 'string' && o !== _ && (i = i.split(/[\. ]/), s = i.length - 1, $.each(i, function (e, t) { var n = e != s ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1) : i; if ($.isPlainObject(o[n]) && e != s)o = o[n]; else { if (o[n] !== _) return a = o[n], !1; if (!$.isPlainObject(o[t]) || e == s) return o[t] !== _ ? a = o[t] : m.error(f.method, i), !1; o = o[t] } })), $.isFunction(a) ? n = a.apply(t, e) : a !== _ && (n = a), $.isArray(z) ? z.push(n) : z !== _ ? z = [z, n] : n !== _ && (z = n), a } }, Q ? (j === _ && m.initialize(), m.invoke(K)) : (j !== _ && j.invoke('destroy'), m.initialize()) }), z !== _ ? z : V }, $.fn.dropdown.settings = { silent: !1, debug: !1, verbose: !1, performance: !0, on: 'click', action: 'activate', values: !1, clearable: !1, apiSettings: !1, selectOnKeydown: !0, minCharacters: 0, filterRemoteData: !1, saveRemoteData: !0, throttle: 200, context: Y, direction: 'auto', keepOnScreen: !0, match: 'both', fullTextSearch: !1, placeholder: 'auto', preserveHTML: !0, sortSelect: !1, forceSelection: !0, allowAdditions: !1, ignoreCase: !1, hideAdditions: !0, maxSelections: !1, useLabels: !0, delimiter: ',', showOnFocus: !0, allowReselection: !1, allowTab: !0, allowCategorySelection: !1, fireOnInit: !1, transition: 'auto', duration: 200, glyphWidth: 1.037, label: { transition: 'scale', duration: 200, variation: !1 }, delay: { hide: 300, show: 200, search: 20, touch: 50 }, onChange: function (e, t, n) {}, onAdd: function (e, t, n) {}, onRemove: function (e, t, n) {}, onLabelSelect: function (e) {}, onLabelCreate: function (e, t) { return $(this) }, onLabelRemove: function (e) { return !0 }, onNoResults: function (e) { return !0 }, onShow: function () {}, onHide: function () {}, name: 'Dropdown', namespace: 'dropdown', message: { addResult: 'Add <b>{term}</b>', count: '{count} selected', maxSelections: 'Max {maxCount} selections', noResults: 'No results found.', serverError: 'There was an error contacting the server' }, error: { action: 'You called a dropdown action that was not defined', alreadySetup: 'Once a select has been initialized behaviors must be called on the created ui dropdown', labels: 'Allowing user additions currently requires the use of labels.', missingMultiple: '<select> requires multiple property to be set to correctly preserve multiple values', method: 'The method you called is not defined.', noAPI: 'The API module is required to load resources remotely', noStorage: 'Saving remote data requires session storage', noTransition: 'This module requires ui transitions <https://github.com/Semantic-Org/UI-Transition>' }, regExp: { escape: /[-[\]{}()*+?.,\\^$|#\s]/g, quote: /"/g }, metadata: { defaultText: 'defaultText', defaultValue: 'defaultValue', placeholderText: 'placeholder', text: 'text', value: 'value' }, fields: { remoteValues: 'results', values: 'values', disabled: 'disabled', name: 'name', value: 'value', text: 'text' }, keys: { backspace: 8, delimiter: 188, deleteKey: 46, enter: 13, escape: 27, pageUp: 33, pageDown: 34, leftArrow: 37, upArrow: 38, rightArrow: 39, downArrow: 40 }, selector: { addition: '.addition', dropdown: '.ui.dropdown', hidden: '.hidden', icon: '> .dropdown.icon', input: '> input[type="hidden"], > select', item: '.item', label: '> .label', remove: '> .label > .delete.icon', siblingLabel: '.label', menu: '.menu', message: '.message', menuIcon: '.dropdown.icon', search: 'input.search, .menu > .search > input, .menu input.search', sizer: '> input.sizer', text: '> .text:not(.icon)', unselectable: '.disabled, .filtered' }, className: { active: 'active', addition: 'addition', animating: 'animating', clear: 'clear', disabled: 'disabled', empty: 'empty', dropdown: 'ui dropdown', filtered: 'filtered', hidden: 'hidden transition', item: 'item', label: 'ui label', loading: 'loading', menu: 'menu', message: 'message', multiple: 'multiple', placeholder: 'default', sizer: 'sizer', search: 'search', selected: 'selected', selection: 'selection', upward: 'upward', leftward: 'left', visible: 'visible' } }, $.fn.dropdown.settings.templates = { dropdown: function (e) { var t = e.placeholder || !1; var n = (e.values, ''); return n += '<i class="dropdown icon"></i>', e.placeholder ? n += '<div class="default text">' + t + '</div>' : n += '<div class="text"></div>', n += '<div class="menu">', $.each(e.values, function (e, t) { n += t.disabled ? '<div class="disabled item" data-value="' + t.value + '">' + t.name + '</div>' : '<div class="item" data-value="' + t.value + '">' + t.name + '</div>' }), n += '</div>' }, menu: function (e, s) { var t = e[s.values] || {}; var a = ''; return $.each(t, function (e, t) { var n = t[s.text] ? 'data-text="' + t[s.text] + '"' : ''; var i = t[s.disabled] ? 'disabled ' : ''; a += '<div class="' + i + 'item" data-value="' + t[s.value] + '"' + n + '>', a += t[s.name], a += '</div>' }), a }, label: function (e, t) { return t + '<i class="delete icon"></i>' }, message: function (e) { return e }, addition: function (e) { return e } } }(jQuery, window, document)), (function (E, M, j, P) { 'use strict'; M = void 0 !== M && M.Math == Math ? M : typeof self !== 'undefined' && self.Math == Math ? self : Function('return this')(), E.fn.modal = function (C) { var S; var e = E(this); var A = E(M); var T = E(j); var k = E('body'); var R = e.selector || ''; var D = (new Date()).getTime(); var L = []; var q = C; var F = typeof q === 'string'; var O = [].slice.call(arguments, 1); var I = M.requestAnimationFrame || M.mozRequestAnimationFrame || M.webkitRequestAnimationFrame || M.msRequestAnimationFrame || function (e) { setTimeout(e, 0) }; return e.each(function () { var n; var i; var e; var s; var a; var t; var o; var r; var l; var c = E.isPlainObject(C) ? E.extend(!0, {}, E.fn.modal.settings, C) : E.extend({}, E.fn.modal.settings); var u = c.selector; var d = c.className; var f = c.namespace; var v = c.error; var m = '.' + f; var h = 'module-' + f; var g = E(this); var p = E(c.context); var b = g.find(u.close); var y = this; var w = g.data(h); var x = !1; l = { initialize: function () { l.verbose('Initializing dimmer', p), l.create.id(), l.create.dimmer(), l.refreshModals(), l.bind.events(), c.observeChanges && l.observeChanges(), l.instantiate() }, instantiate: function () { l.verbose('Storing instance of modal'), w = l, g.data(h, w) }, create: { dimmer: function () { var e = { debug: c.debug, variation: !c.centered && 'top aligned', dimmerName: 'modals' }; var t = E.extend(!0, e, c.dimmerSettings); E.fn.dimmer !== P ? (l.debug('Creating dimmer'), s = p.dimmer(t), c.detachable ? (l.verbose('Modal is detachable, moving content into dimmer'), s.dimmer('add content', g)) : l.set.undetached(), a = s.dimmer('get dimmer')) : l.error(v.dimmer) }, id: function () { o = (Math.random().toString(16) + '000000000').substr(2, 8), t = '.' + o, l.verbose('Creating unique id for element', o) } }, destroy: function () { l.verbose('Destroying previous modal'), g.removeData(h).off(m), A.off(t), a.off(t), b.off(m), p.dimmer('destroy') }, observeChanges: function () { 'MutationObserver' in M && ((r = new MutationObserver(function (e) { l.debug('DOM tree modified, refreshing'), l.refresh() })).observe(y, { childList: !0, subtree: !0 }), l.debug('Setting up mutation observer', r)) }, refresh: function () { l.remove.scrolling(), l.cacheSizes(), l.can.useFlex() || l.set.modalOffset(), l.set.screenHeight(), l.set.type() }, refreshModals: function () { i = g.siblings(u.modal), n = i.add(g) }, attachEvents: function (e, t) { var n = E(e); t = E.isFunction(l[t]) ? l[t] : l.toggle, n.length > 0 ? (l.debug('Attaching modal events to element', e, t), n.off(m).on('click' + m, t)) : l.error(v.notFound, e) }, bind: { events: function () { l.verbose('Attaching events'), g.on('click' + m, u.close, l.event.close).on('click' + m, u.approve, l.event.approve).on('click' + m, u.deny, l.event.deny), A.on('resize' + t, l.event.resize) }, scrollLock: function () { s.get(0).addEventListener('touchmove', l.event.preventScroll, { passive: !1 }) } }, unbind: { scrollLock: function () { s.get(0).removeEventListener('touchmove', l.event.preventScroll, { passive: !1 }) } }, get: { id: function () { return (Math.random().toString(16) + '000000000').substr(2, 8) } }, event: { approve: function () { x || !1 === c.onApprove.call(y, E(this)) ? l.verbose('Approve callback returned false cancelling hide') : (x = !0, l.hide(function () { x = !1 })) }, preventScroll: function (e) { e.preventDefault() }, deny: function () { x || !1 === c.onDeny.call(y, E(this)) ? l.verbose('Deny callback returned false cancelling hide') : (x = !0, l.hide(function () { x = !1 })) }, close: function () { l.hide() }, click: function (e) { if (c.closable) { var t = E(e.target).closest(u.modal).length > 0; var n = E.contains(j.documentElement, e.target); !t && n && l.is.active() && (l.debug('Dimmer clicked, hiding all modals'), l.remove.clickaway(), c.allowMultiple ? l.hide() : l.hideAll()) } else l.verbose('Dimmer clicked but closable setting is disabled') }, debounce: function (e, t) { clearTimeout(l.timer), l.timer = setTimeout(e, t) }, keyboard: function (e) { e.which == 27 && (c.closable ? (l.debug('Escape key pressed hiding modal'), l.hide()) : l.debug('Escape key pressed, but closable is set to false'), e.preventDefault()) }, resize: function () { s.dimmer('is active') && (l.is.animating() || l.is.active()) && I(l.refresh) } }, toggle: function () { l.is.active() || l.is.animating() ? l.hide() : l.show() }, show: function (e) { e = E.isFunction(e) ? e : function () {}, l.refreshModals(), l.set.dimmerSettings(), l.set.dimmerStyles(), l.showModal(e) }, hide: function (e) { e = E.isFunction(e) ? e : function () {}, l.refreshModals(), l.hideModal(e) }, showModal: function (e) { e = E.isFunction(e) ? e : function () {}, l.is.animating() || !l.is.active() ? (l.showDimmer(), l.cacheSizes(), l.can.useFlex() ? l.remove.legacy() : (l.set.legacy(), l.set.modalOffset(), l.debug('Using non-flex legacy modal positioning.')), l.set.screenHeight(), l.set.type(), l.set.clickaway(), !c.allowMultiple && l.others.active() ? l.hideOthers(l.showModal) : (c.allowMultiple && c.detachable && g.detach().appendTo(a), c.onShow.call(y), c.transition && E.fn.transition !== P && g.transition('is supported') ? (l.debug('Showing modal with css animations'), g.transition({ debug: c.debug, animation: c.transition + ' in', queue: c.queue, duration: c.duration, useFailSafe: !0, onComplete: function () { c.onVisible.apply(y), c.keyboardShortcuts && l.add.keyboardShortcuts(), l.save.focus(), l.set.active(), c.autofocus && l.set.autofocus(), e() } })) : l.error(v.noTransition))) : l.debug('Modal is already visible') }, hideModal: function (e, t) { e = E.isFunction(e) ? e : function () {}, l.debug('Hiding modal'), !1 !== c.onHide.call(y, E(this)) ? (l.is.animating() || l.is.active()) && (c.transition && E.fn.transition !== P && g.transition('is supported') ? (l.remove.active(), g.transition({ debug: c.debug, animation: c.transition + ' out', queue: c.queue, duration: c.duration, useFailSafe: !0, onStart: function () { l.others.active() || t || l.hideDimmer(), c.keyboardShortcuts && l.remove.keyboardShortcuts() }, onComplete: function () { c.onHidden.call(y), l.remove.dimmerStyles(), l.restore.focus(), e() } })) : l.error(v.noTransition)) : l.verbose('Hide callback returned false cancelling hide') }, showDimmer: function () { s.dimmer('is animating') || !s.dimmer('is active') ? (l.debug('Showing dimmer'), s.dimmer('show')) : l.debug('Dimmer already visible') }, hideDimmer: function () { s.dimmer('is animating') || s.dimmer('is active') ? (l.unbind.scrollLock(), s.dimmer('hide', function () { l.remove.clickaway(), l.remove.screenHeight() })) : l.debug('Dimmer is not visible cannot hide') }, hideAll: function (e) { var t = n.filter('.' + d.active + ', .' + d.animating); e = E.isFunction(e) ? e : function () {}, t.length > 0 && (l.debug('Hiding all visible modals'), l.hideDimmer(), t.modal('hide modal', e)) }, hideOthers: function (e) { var t = i.filter('.' + d.active + ', .' + d.animating); e = E.isFunction(e) ? e : function () {}, t.length > 0 && (l.debug('Hiding other modals', i), t.modal('hide modal', e, !0)) }, others: { active: function () { return i.filter('.' + d.active).length > 0 }, animating: function () { return i.filter('.' + d.animating).length > 0 } }, add: { keyboardShortcuts: function () { l.verbose('Adding keyboard shortcuts'), T.on('keyup' + m, l.event.keyboard) } }, save: { focus: function () { E(j.activeElement).closest(g).length > 0 || (e = E(j.activeElement).blur()) } }, restore: { focus: function () { e && e.length > 0 && e.focus() } }, remove: { active: function () { g.removeClass(d.active) }, legacy: function () { g.removeClass(d.legacy) }, clickaway: function () { a.off('click' + t) }, dimmerStyles: function () { a.removeClass(d.inverted), s.removeClass(d.blurring) }, bodyStyle: function () { k.attr('style') === '' && (l.verbose('Removing style attribute'), k.removeAttr('style')) }, screenHeight: function () { l.debug('Removing page height'), k.css('height', '') }, keyboardShortcuts: function () { l.verbose('Removing keyboard shortcuts'), T.off('keyup' + m) }, scrolling: function () { s.removeClass(d.scrolling), g.removeClass(d.scrolling) } }, cacheSizes: function () { g.addClass(d.loading); var e = g.prop('scrollHeight'); var t = g.outerWidth(); var n = g.outerHeight(); l.cache !== P && n === 0 || (l.cache = { pageHeight: E(j).outerHeight(), width: t, height: n + c.offset, scrollHeight: e + c.offset, contextHeight: c.context == 'body' ? E(M).height() : s.height() }, l.cache.topOffset = -l.cache.height / 2), g.removeClass(d.loading), l.debug('Caching modal and container sizes', l.cache) }, can: { useFlex: function () { return c.useFlex == 'auto' ? c.detachable && !l.is.ie() : c.useFlex }, fit: function () { var e = l.cache.contextHeight; var t = l.cache.contextHeight / 2; var n = l.cache.topOffset; var i = l.cache.scrollHeight; var s = l.cache.height; var a = c.padding; return s < i ? t + n + i + a < e : s + 2 * a < e } }, is: { active: function () { return g.hasClass(d.active) }, ie: function () { return !M.ActiveXObject && 'ActiveXObject' in M || 'ActiveXObject' in M }, animating: function () { return g.transition('is supported') ? g.transition('is animating') : g.is(':visible') }, scrolling: function () { return s.hasClass(d.scrolling) }, modernBrowser: function () { return !(M.ActiveXObject || 'ActiveXObject' in M) } }, set: { autofocus: function () { var e = g.find('[tabindex], :input').filter(':visible'); var t = e.filter('[autofocus]'); var n = t.length > 0 ? t.first() : e.first(); n.length > 0 && n.focus() }, clickaway: function () { a.on('click' + t, l.event.click) }, dimmerSettings: function () { if (E.fn.dimmer !== P) { var e = { debug: c.debug, dimmerName: 'modals', closable: 'auto', useFlex: l.can.useFlex(), variation: !c.centered && 'top aligned', duration: { show: c.duration, hide: c.duration } }; var t = E.extend(!0, e, c.dimmerSettings); c.inverted && (t.variation = t.variation !== P ? t.variation + ' inverted' : 'inverted'), p.dimmer('setting', t) } else l.error(v.dimmer) }, dimmerStyles: function () { c.inverted ? a.addClass(d.inverted) : a.removeClass(d.inverted), c.blurring ? s.addClass(d.blurring) : s.removeClass(d.blurring) }, modalOffset: function () { var e = l.cache.width; var t = l.cache.height; g.css({ marginTop: c.centered && l.can.fit() ? -t / 2 : 0, marginLeft: -e / 2 }), l.verbose('Setting modal offset for legacy mode') }, screenHeight: function () { l.can.fit() ? k.css('height', '') : (l.debug('Modal is taller than page content, resizing page height'), k.css('height', l.cache.height + 2 * c.padding)) }, active: function () { g.addClass(d.active) }, scrolling: function () { s.addClass(d.scrolling), g.addClass(d.scrolling), l.unbind.scrollLock() }, legacy: function () { g.addClass(d.legacy) }, type: function () { l.can.fit() ? (l.verbose('Modal fits on screen'), l.others.active() || l.others.animating() || (l.remove.scrolling(), l.bind.scrollLock())) : (l.verbose('Modal cannot fit on screen setting to scrolling'), l.set.scrolling()) }, undetached: function () { s.addClass(d.undetached) } }, setting: function (e, t) { if (l.debug('Changing setting', e, t), E.isPlainObject(e))E.extend(!0, c, e); else { if (t === P) return c[e]; E.isPlainObject(c[e]) ? E.extend(!0, c[e], t) : c[e] = t } }, internal: function (e, t) { if (E.isPlainObject(e))E.extend(!0, l, e); else { if (t === P) return l[e]; l[e] = t } }, debug: function () { !c.silent && c.debug && (c.performance ? l.performance.log(arguments) : (l.debug = Function.prototype.bind.call(console.info, console, c.name + ':'), l.debug.apply(console, arguments))) }, verbose: function () { !c.silent && c.verbose && c.debug && (c.performance ? l.performance.log(arguments) : (l.verbose = Function.prototype.bind.call(console.info, console, c.name + ':'), l.verbose.apply(console, arguments))) }, error: function () { c.silent || (l.error = Function.prototype.bind.call(console.error, console, c.name + ':'), l.error.apply(console, arguments)) }, performance: { log: function (e) { var t, n; c.performance && (n = (t = (new Date()).getTime()) - (D || t), D = t, L.push({ Name: e[0], Arguments: [].slice.call(e, 1) || '', Element: y, 'Execution Time': n })), clearTimeout(l.performance.timer), l.performance.timer = setTimeout(l.performance.display, 500) }, display: function () { var e = c.name + ':'; var n = 0; D = !1, clearTimeout(l.performance.timer), E.each(L, function (e, t) { n += t['Execution Time'] }), e += ' ' + n + 'ms', R && (e += " '" + R + "'"), (console.group !== P || console.table !== P) && L.length > 0 && (console.groupCollapsed(e), console.table ? console.table(L) : E.each(L, function (e, t) { console.log(t.Name + ': ' + t['Execution Time'] + 'ms') }), console.groupEnd()), L = [] } }, invoke: function (i, e, t) { var s; var a; var n; var o = w; return e = e || O, t = y || t, typeof i === 'string' && o !== P && (i = i.split(/[\. ]/), s = i.length - 1, E.each(i, function (e, t) { var n = e != s ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1) : i; if (E.isPlainObject(o[n]) && e != s)o = o[n]; else { if (o[n] !== P) return a = o[n], !1; if (!E.isPlainObject(o[t]) || e == s) return o[t] !== P && (a = o[t]), !1; o = o[t] } })), E.isFunction(a) ? n = a.apply(t, e) : a !== P && (n = a), E.isArray(S) ? S.push(n) : S !== P ? S = [S, n] : n !== P && (S = n), a } }, F ? (w === P && l.initialize(), l.invoke(q)) : (w !== P && w.invoke('destroy'), l.initialize()) }), S !== P ? S : this }, E.fn.modal.settings = { name: 'Modal', namespace: 'modal', useFlex: 'auto', offset: 0, silent: !1, debug: !1, verbose: !1, performance: !0, observeChanges: !1, allowMultiple: !1, detachable: !0, closable: !0, autofocus: !0, inverted: !1, blurring: !1, centered: !0, dimmerSettings: { closable: !1, useCSS: !0 }, keyboardShortcuts: !0, context: 'body', queue: !1, duration: 500, transition: 'scale', padding: 50, onShow: function () {}, onVisible: function () {}, onHide: function () { return !0 }, onHidden: function () {}, onApprove: function () { return !0 }, onDeny: function () { return !0 }, selector: { close: '> .close', approve: '.actions .positive, .actions .approve, .actions .ok', deny: '.actions .negative, .actions .deny, .actions .cancel', modal: '.ui.modal' }, error: { dimmer: 'UI Dimmer, a required component is not included in this page', method: 'The method you called is not defined.', notFound: 'The element you specified could not be found' }, className: { active: 'active', animating: 'animating', blurring: 'blurring', inverted: 'inverted', legacy: 'legacy', loading: 'loading', scrolling: 'scrolling', undetached: 'undetached' } } }(jQuery, window, document)), (function (L, q, F, O) { 'use strict'; q = void 0 !== q && q.Math == Math ? q : typeof self !== 'undefined' && self.Math == Math ? self : Function('return this')(), L.fn.search = function (l) { var x; var C = L(this); var S = C.selector || ''; var A = (new Date()).getTime(); var T = []; var k = l; var R = typeof k === 'string'; var D = [].slice.call(arguments, 1); return L(this).each(function () { var f; var c = L.isPlainObject(l) ? L.extend(!0, {}, L.fn.search.settings, l) : L.extend({}, L.fn.search.settings); var v = c.className; var u = c.metadata; var d = c.regExp; var a = c.fields; var m = c.selector; var h = c.error; var e = c.namespace; var i = '.' + e; var t = e + '-module'; var g = L(this); var p = g.find(m.prompt); var n = g.find(m.searchButton); var s = g.find(m.results); var o = g.find(m.result); var b = (g.find(m.category), this); var r = g.data(t); var y = !1; var w = !1; f = { initialize: function () { f.verbose('Initializing module'), f.get.settings(), f.determine.searchFields(), f.bind.events(), f.set.type(), f.create.results(), f.instantiate() }, instantiate: function () { f.verbose('Storing instance of module', f), r = f, g.data(t, f) }, destroy: function () { f.verbose('Destroying instance'), g.off(i).removeData(t) }, refresh: function () { f.debug('Refreshing selector cache'), p = g.find(m.prompt), n = g.find(m.searchButton), g.find(m.category), s = g.find(m.results), o = g.find(m.result) }, refreshResults: function () { s = g.find(m.results), o = g.find(m.result) }, bind: { events: function () { f.verbose('Binding events to search'), c.automatic && (g.on(f.get.inputEvent() + i, m.prompt, f.event.input), p.attr('autocomplete', 'off')), g.on('focus' + i, m.prompt, f.event.focus).on('blur' + i, m.prompt, f.event.blur).on('keydown' + i, m.prompt, f.handleKeyboard).on('click' + i, m.searchButton, f.query).on('mousedown' + i, m.results, f.event.result.mousedown).on('mouseup' + i, m.results, f.event.result.mouseup).on('click' + i, m.result, f.event.result.click) } }, determine: { searchFields: function () { l && l.searchFields !== O && (c.searchFields = l.searchFields) } }, event: { input: function () { c.searchDelay ? (clearTimeout(f.timer), f.timer = setTimeout(function () { f.is.focused() && f.query() }, c.searchDelay)) : f.query() }, focus: function () { f.set.focus(), c.searchOnFocus && f.has.minimumCharacters() && f.query(function () { f.can.show() && f.showResults() }) }, blur: function (e) { var t = F.activeElement === this; var n = function () { f.cancel.query(), f.remove.focus(), f.timer = setTimeout(f.hideResults, c.hideDelay) }; t || (w = !1, f.resultsClicked ? (f.debug('Determining if user action caused search to close'), g.one('click.close' + i, m.results, function (e) { f.is.inMessage(e) || y ? p.focus() : (y = !1, f.is.animating() || f.is.hidden() || n()) })) : (f.debug('Input blurred without user action, closing results'), n())) }, result: { mousedown: function () { f.resultsClicked = !0 }, mouseup: function () { f.resultsClicked = !1 }, click: function (e) { f.debug('Search result selected'); var t = L(this); var n = t.find(m.title).eq(0); var i = t.is('a[href]') ? t : t.find('a[href]').eq(0); var s = i.attr('href') || !1; var a = i.attr('target') || !1; var o = (n.html(), n.length > 0 && n.text()); var r = f.get.results(); var l = t.data(u.result) || f.get.result(o, r); if (L.isFunction(c.onSelect) && !1 === c.onSelect.call(b, l, r)) return f.debug('Custom onSelect callback cancelled default select action'), void (y = !0); f.hideResults(), o && f.set.value(o), s && (f.verbose('Opening search link found in result', i), a == '_blank' || e.ctrlKey ? q.open(s) : q.location.href = s) } } }, handleKeyboard: function (e) { var t; var n = g.find(m.result); var i = g.find(m.category); var s = n.filter('.' + v.active); var a = n.index(s); var o = n.length; var r = s.length > 0; var l = e.which; var c = 13; var u = 38; var d = 40; if (l == 27 && (f.verbose('Escape key pressed, blurring search field'), f.hideResults(), w = !0), f.is.visible()) if (l == c) { if (f.verbose('Enter key pressed, selecting active result'), n.filter('.' + v.active).length > 0) return f.event.result.click.call(n.filter('.' + v.active), e), e.preventDefault(), !1 } else l == u && r ? (f.verbose('Up key pressed, changing active result'), t = a - 1 < 0 ? a : a - 1, i.removeClass(v.active), n.removeClass(v.active).eq(t).addClass(v.active).closest(i).addClass(v.active), e.preventDefault()) : l == d && (f.verbose('Down key pressed, changing active result'), t = o <= a + 1 ? a : a + 1, i.removeClass(v.active), n.removeClass(v.active).eq(t).addClass(v.active).closest(i).addClass(v.active), e.preventDefault()); else l == c && (f.verbose('Enter key pressed, executing query'), f.query(), f.set.buttonPressed(), p.one('keyup', f.remove.buttonFocus)) }, setup: { api: function (t, n) { var e = { debug: c.debug, on: !1, cache: c.cache, action: 'search', urlData: { query: t }, onSuccess: function (e) { f.parse.response.call(b, e, t), n() }, onFailure: function () { f.displayMessage(h.serverError), n() }, onAbort: function (e) {}, onError: f.error }; L.extend(!0, e, c.apiSettings), f.verbose('Setting up API request', e), g.api(e) } }, can: { useAPI: function () { return L.fn.api !== O }, show: function () { return f.is.focused() && !f.is.visible() && !f.is.empty() }, transition: function () { return c.transition && L.fn.transition !== O && g.transition('is supported') } }, is: { animating: function () { return s.hasClass(v.animating) }, hidden: function () { return s.hasClass(v.hidden) }, inMessage: function (e) { if (e.target) { var t = L(e.target); return L.contains(F.documentElement, e.target) && t.closest(m.message).length > 0 } }, empty: function () { return s.html() === '' }, visible: function () { return s.filter(':visible').length > 0 }, focused: function () { return p.filter(':focus').length > 0 } }, get: { settings: function () { L.isPlainObject(l) && l.searchFullText && (c.fullTextSearch = l.searchFullText, f.error(c.error.oldSearchSyntax, b)) }, inputEvent: function () { var e = p[0]; return e !== O && e.oninput !== O ? 'input' : e !== O && e.onpropertychange !== O ? 'propertychange' : 'keyup' }, value: function () { return p.val() }, results: function () { return g.data(u.results) }, result: function (n, e) { var i = ['title', 'id']; var s = !1; return n = n !== O ? n : f.get.value(), e = e !== O ? e : f.get.results(), c.type === 'category' ? (f.debug('Finding result that matches', n), L.each(e, function (e, t) { if (L.isArray(t.results) && (s = f.search.object(n, t.results, i)[0])) return !1 })) : (f.debug('Finding result in results object', n), s = f.search.object(n, e, i)[0]), s || !1 } }, select: { firstResult: function () { f.verbose('Selecting first result'), o.first().addClass(v.active) } }, set: { focus: function () { g.addClass(v.focus) }, loading: function () { g.addClass(v.loading) }, value: function (e) { f.verbose('Setting search input value', e), p.val(e) }, type: function (e) { e = e || c.type, c.type == 'category' && g.addClass(c.type) }, buttonPressed: function () { n.addClass(v.pressed) } }, remove: { loading: function () { g.removeClass(v.loading) }, focus: function () { g.removeClass(v.focus) }, buttonPressed: function () { n.removeClass(v.pressed) } }, query: function (e) { e = L.isFunction(e) ? e : function () {}; var t = f.get.value(); var n = f.read.cache(t); e = e || function () {}, f.has.minimumCharacters() ? (n ? (f.debug('Reading result from cache', t), f.save.results(n.results), f.addResults(n.html), f.inject.id(n.results), e()) : (f.debug('Querying for', t), L.isPlainObject(c.source) || L.isArray(c.source) ? (f.search.local(t), e()) : f.can.useAPI() ? f.search.remote(t, e) : (f.error(h.source), e())), c.onSearchQuery.call(b, t)) : f.hideResults() }, search: { local: function (e) { var t; var n = f.search.object(e, c.content); f.set.loading(), f.save.results(n), f.debug('Returned full local search results', n), c.maxResults > 0 && (f.debug('Using specified max results', n), n = n.slice(0, c.maxResults)), c.type == 'category' && (n = f.create.categoryResults(n)), t = f.generateResults({ results: n }), f.remove.loading(), f.addResults(t), f.inject.id(n), f.write.cache(e, { html: t, results: n }) }, remote: function (e, t) { t = L.isFunction(t) ? t : function () {}, g.api('is loading') && g.api('abort'), f.setup.api(e, t), g.api('query') }, object: function (i, t, e) { var a = []; var o = []; var r = []; var n = i.toString().replace(d.escape, '\\$&'); var s = new RegExp(d.beginsWith + n, 'i'); var l = function (e, t) { var n = L.inArray(t, a) == -1; var i = L.inArray(t, r) == -1; var s = L.inArray(t, o) == -1; n && i && s && e.push(t) }; return t = t || c.source, e = e !== O ? e : c.searchFields, L.isArray(e) || (e = [e]), t === O || !1 === t ? (f.error(h.source), []) : (L.each(e, function (e, n) { L.each(t, function (e, t) { typeof t[n] === 'string' && (t[n].search(s) !== -1 ? l(a, t) : c.fullTextSearch === 'exact' && f.exactSearch(i, t[n]) ? l(o, t) : c.fullTextSearch == 1 && f.fuzzySearch(i, t[n]) && l(r, t)) }) }), L.merge(o, r), L.merge(a, o), a) } }, exactSearch: function (e, t) { return e = e.toLowerCase(), (t = t.toLowerCase()).indexOf(e) > -1 }, fuzzySearch: function (e, t) { var n = t.length; var i = e.length; if (typeof e !== 'string') return !1; if (e = e.toLowerCase(), t = t.toLowerCase(), n < i) return !1; if (i === n) return e === t; e:for (var s = 0, a = 0; s < i; s++) { for (var o = e.charCodeAt(s); a < n;) if (t.charCodeAt(a++) === o) continue e; return !1 } return !0 }, parse: { response: function (e, t) { var n = f.generateResults(e); f.verbose('Parsing server response', e), e !== O && t !== O && e[a.results] !== O && (f.addResults(n), f.inject.id(e[a.results]), f.write.cache(t, { html: n, results: e[a.results] }), f.save.results(e[a.results])) } }, cancel: { query: function () { f.can.useAPI() && g.api('abort') } }, has: { minimumCharacters: function () { return f.get.value().length >= c.minCharacters }, results: function () { return s.length !== 0 && s.html() != '' } }, clear: { cache: function (e) { var t = g.data(u.cache); e ? e && t && t[e] && (f.debug('Removing value from cache', e), delete t[e], g.data(u.cache, t)) : (f.debug('Clearing cache', e), g.removeData(u.cache)) } }, read: { cache: function (e) { var t = g.data(u.cache); return !!c.cache && (f.verbose('Checking cache for generated html for query', e), typeof t === 'object' && t[e] !== O && t[e]) } }, create: { categoryResults: function (e) { var n = {}; return L.each(e, function (e, t) { t.category && (n[t.category] === O ? (f.verbose('Creating new category of results', t.category), n[t.category] = { name: t.category, results: [t] }) : n[t.category].results.push(t)) }), n }, id: function (e, t) { var n; var i = e + 1; return t !== O ? (n = String.fromCharCode(97 + t) + i, f.verbose('Creating category result id', n)) : (n = i, f.verbose('Creating result id', n)), n }, results: function () { s.length === 0 && (s = L('<div />').addClass(v.results).appendTo(g)) } }, inject: { result: function (e, t, n) { f.verbose('Injecting result into results'); var i = n !== O ? s.children().eq(n).children(m.results).first().children(m.result).eq(t) : s.children(m.result).eq(t); f.verbose('Injecting results metadata', i), i.data(u.result, e) }, id: function (i) { f.debug('Injecting unique ids into results'); var s = 0; var a = 0; return c.type === 'category' ? L.each(i, function (e, i) { a = 0, L.each(i.results, function (e, t) { var n = i.results[e]; n.id === O && (n.id = f.create.id(a, s)), f.inject.result(n, a, s), a++ }), s++ }) : L.each(i, function (e, t) { var n = i[e]; n.id === O && (n.id = f.create.id(a)), f.inject.result(n, a), a++ }), i } }, save: { results: function (e) { f.verbose('Saving current search results to metadata', e), g.data(u.results, e) } }, write: { cache: function (e, t) { var n = g.data(u.cache) !== O ? g.data(u.cache) : {}; c.cache && (f.verbose('Writing generated html to cache', e, t), n[e] = t, g.data(u.cache, n)) } }, addResults: function (e) { if (L.isFunction(c.onResultsAdd) && !1 === c.onResultsAdd.call(s, e)) return f.debug('onResultsAdd callback cancelled default action'), !1; e ? (s.html(e), f.refreshResults(), c.selectFirstResult && f.select.firstResult(), f.showResults()) : f.hideResults(function () { s.empty() }) }, showResults: function (e) { e = L.isFunction(e) ? e : function () {}, w || !f.is.visible() && f.has.results() && (f.can.transition() ? (f.debug('Showing results with css animations'), s.transition({ animation: c.transition + ' in', debug: c.debug, verbose: c.verbose, duration: c.duration, onComplete: function () { e() }, queue: !0 })) : (f.debug('Showing results with javascript'), s.stop().fadeIn(c.duration, c.easing)), c.onResultsOpen.call(s)) }, hideResults: function (e) { e = L.isFunction(e) ? e : function () {}, f.is.visible() && (f.can.transition() ? (f.debug('Hiding results with css animations'), s.transition({ animation: c.transition + ' out', debug: c.debug, verbose: c.verbose, duration: c.duration, onComplete: function () { e() }, queue: !0 })) : (f.debug('Hiding results with javascript'), s.stop().fadeOut(c.duration, c.easing)), c.onResultsClose.call(s)) }, generateResults: function (e) { f.debug('Generating html from response', e); var t = c.templates[c.type]; var n = L.isPlainObject(e[a.results]) && !L.isEmptyObject(e[a.results]); var i = L.isArray(e[a.results]) && e[a.results].length > 0; var s = ''; return n || i ? (c.maxResults > 0 && (n ? c.type == 'standard' && f.error(h.maxResults) : e[a.results] = e[a.results].slice(0, c.maxResults)), L.isFunction(t) ? s = t(e, a) : f.error(h.noTemplate, !1)) : c.showNoResults && (s = f.displayMessage(h.noResults, 'empty')), c.onResults.call(b, e), s }, displayMessage: function (e, t) { return t = t || 'standard', f.debug('Displaying message', e, t), f.addResults(c.templates.message(e, t)), c.templates.message(e, t) }, setting: function (e, t) { if (L.isPlainObject(e))L.extend(!0, c, e); else { if (t === O) return c[e]; c[e] = t } }, internal: function (e, t) { if (L.isPlainObject(e))L.extend(!0, f, e); else { if (t === O) return f[e]; f[e] = t } }, debug: function () { !c.silent && c.debug && (c.performance ? f.performance.log(arguments) : (f.debug = Function.prototype.bind.call(console.info, console, c.name + ':'), f.debug.apply(console, arguments))) }, verbose: function () { !c.silent && c.verbose && c.debug && (c.performance ? f.performance.log(arguments) : (f.verbose = Function.prototype.bind.call(console.info, console, c.name + ':'), f.verbose.apply(console, arguments))) }, error: function () { c.silent || (f.error = Function.prototype.bind.call(console.error, console, c.name + ':'), f.error.apply(console, arguments)) }, performance: { log: function (e) { var t, n; c.performance && (n = (t = (new Date()).getTime()) - (A || t), A = t, T.push({ Name: e[0], Arguments: [].slice.call(e, 1) || '', Element: b, 'Execution Time': n })), clearTimeout(f.performance.timer), f.performance.timer = setTimeout(f.performance.display, 500) }, display: function () { var e = c.name + ':'; var n = 0; A = !1, clearTimeout(f.performance.timer), L.each(T, function (e, t) { n += t['Execution Time'] }), e += ' ' + n + 'ms', S && (e += " '" + S + "'"), C.length > 1 && (e += ' (' + C.length + ')'), (console.group !== O || console.table !== O) && T.length > 0 && (console.groupCollapsed(e), console.table ? console.table(T) : L.each(T, function (e, t) { console.log(t.Name + ': ' + t['Execution Time'] + 'ms') }), console.groupEnd()), T = [] } }, invoke: function (i, e, t) { var s; var a; var n; var o = r; return e = e || D, t = b || t, typeof i === 'string' && o !== O && (i = i.split(/[\. ]/), s = i.length - 1, L.each(i, function (e, t) { var n = e != s ? t + i[e + 1].charAt(0).toUpperCase() + i[e + 1].slice(1) : i; if (L.isPlainObject(o[n]) && e != s)o = o[n]; else { if (o[n] !== O) return a = o[n], !1; if (!L.isPlainObject(o[t]) || e == s) return o[t] !== O && (a = o[t]), !1; o = o[t] } })), L.isFunction(a) ? n = a.apply(t, e) : a !== O && (n = a), L.isArray(x) ? x.push(n) : x !== O ? x = [x, n] : n !== O && (x = n), a } }, R ? (r === O && f.initialize(), f.invoke(k)) : (r !== O && r.invoke('destroy'), f.initialize()) }), x !== O ? x : this }, L.fn.search.settings = { name: 'Search', namespace: 'search', silent: !1, debug: !1, verbose: !1, performance: !0, type: 'standard', minCharacters: 1, selectFirstResult: !1, apiSettings: !1, source: !1, searchOnFocus: !0, searchFields: ['title', 'description'], displayField: '', fullTextSearch: 'exact', automatic: !0, hideDelay: 0, searchDelay: 200, maxResults: 7, cache: !0, showNoResults: !0, transition: 'scale', duration: 200, easing: 'easeOutExpo', onSelect: !1, onResultsAdd: !1, onSearchQuery: function (e) {}, onResults: function (e) {}, onResultsOpen: function () {}, onResultsClose: function () {}, className: { animating: 'animating', active: 'active', empty: 'empty', focus: 'focus', hidden: 'hidden', loading: 'loading', results: 'results', pressed: 'down' }, error: { source: 'Cannot search. No source used, and Semantic API module was not included', noResults: 'Your search returned no results', logging: 'Error in debug logging, exiting.', noEndpoint: 'No search endpoint was specified', noTemplate: 'A valid template name was not specified.', oldSearchSyntax: 'searchFullText setting has been renamed fullTextSearch for consistency, please adjust your settings.', serverError: 'There was an issue querying the server.', maxResults: 'Results must be an array to use maxResults setting', method: 'The method you called is not defined.' }, metadata: { cache: 'cache', results: 'results', result: 'result' }, regExp: { escape: /[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, beginsWith: '(?:s|^)' }, fields: { categories: 'results', categoryName: 'name', categoryResults: 'results', description: 'description', image: 'image', price: 'price', results: 'results', title: 'title', url: 'url', action: 'action', actionText: 'text', actionURL: 'url' }, selector: { prompt: '.prompt', searchButton: '.search.button', results: '.results', message: '.results > .message', category: '.category', result: '.result', title: '.title, .name' }, templates: { escape: function (e) { var t = { '&': '&amp;', '<': '&lt;', '>': '&gt;', '"': '&quot;', "'": '&#x27;', '`': '&#x60;' }; return /[&<>"'`]/.test(e) ? e.replace(/[&<>"'`]/g, function (e) { return t[e] }) : e }, message: function (e, t) { var n = ''; return e !== O && t !== O && (n += '<div class="message ' + t + '">', n += t == 'empty' ? '<div class="header">No Results</div class="header"><div class="description">' + e + '</div class="description">' : ' <div class="description">' + e + '</div>', n += '</div>'), n }, category: function (e, n) { var i = ''; L.fn.search.settings.templates.escape; return e[n.categoryResults] !== O && (L.each(e[n.categoryResults], function (e, t) { t[n.results] !== O && t.results.length > 0 && (i += '<div class="category">', t[n.categoryName] !== O && (i += '<div class="name">' + t[n.categoryName] + '</div>'), i += '<div class="results">', L.each(t.results, function (e, t) { t[n.url] ? i += '<a class="result" href="' + t[n.url] + '">' : i += '<a class="result">', t[n.image] !== O && (i += '<div class="image"> <img src="' + t[n.image] + '"></div>'), i += '<div class="content">', t[n.price] !== O && (i += '<div class="price">' + t[n.price] + '</div>'), t[n.title] !== O && (i += '<div class="title">' + t[n.title] + '</div>'), t[n.description] !== O && (i += '<div class="description">' + t[n.description] + '</div>'), i += '</div>', i += '</a>' }), i += '</div>', i += '</div>') }), e[n.action] && (i += '<a href="' + e[n.action][n.actionURL] + '" class="action">' + e[n.action][n.actionText] + '</a>'), i) }, standard: function (e, n) { var i = ''; return e[n.results] !== O && (L.each(e[n.results], function (e, t) { t[n.url] ? i += '<a class="result" href="' + t[n.url] + '">' : i += '<a class="result">', t[n.image] !== O && (i += '<div class="image"> <img src="' + t[n.image] + '"></div>'), i += '<div class="content">', t[n.price] !== O && (i += '<div class="price">' + t[n.price] + '</div>'), t[n.title] !== O && (i += '<div class="title">' + t[n.title] + '</div>'), t[n.description] !== O && (i += '<div class="description">' + t[n.description] + '</div>'), i += '</div>', i += '</a>' }), e[n.action] && (i += '<a href="' + e[n.action][n.actionURL] + '" class="action">' + e[n.action][n.actionText] + '</a>'), i) } } } }(jQuery, window, document))
